--[ 2021.09.28.10.44.05.608.0 ]--
NewLogger: P02_DataTypes
Version: 1.5
--[ 2021.09.28.10.44.05.628.0 ]--
InitTree:
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2021.09.28.10.44.05.631.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2021.09.28.10.44.05.633.0 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2021.09.28.10.44.05.636.0 ]--
InitFile: /.cos265


--[ 2021.09.28.10.44.05.638.0 ]--
InitFile: /src/Steque.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    public Steque() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return true;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {

    }

    // pushes item to top of steque
    public void push(Item item) {

    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {

    }
}

--[ 2021.09.28.10.44.05.640.0 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2021.09.28.11.14.44.015.0 ]--
:/src/Steque.java
+ 6     
--[ 2021.09.28.11.14.45.995.0 ]--
r 6     /
--[ 2021.09.28.11.14.46.064.0 ]--
r 6     //
--[ 2021.09.28.11.14.47.791.0 ]--
r 6     /
--[ 2021.09.28.11.14.48.034.0 ]--
r 6     
--[ 2021.09.28.11.14.48.289.0 ]--
- 6
--[ 2021.09.28.11.14.58.184.0 ]--
+ 6     
--[ 2021.09.28.11.14.59.039.0 ]--
r 6     /
--[ 2021.09.28.11.14.59.176.0 ]--
r 6     //
--[ 2021.09.28.11.14.59.700.0 ]--
r 6     // 
--[ 2021.09.28.11.14.59.970.0 ]--
r 6     // s
--[ 2021.09.28.11.15.00.211.0 ]--
r 6     // si
--[ 2021.09.28.11.15.00.320.0 ]--
r 6     // sin
--[ 2021.09.28.11.15.00.431.0 ]--
r 6     // sing
--[ 2021.09.28.11.15.00.528.0 ]--
r 6     // singl
--[ 2021.09.28.11.15.00.743.0 ]--
r 6     // singly
--[ 2021.09.28.11.15.00.823.0 ]--
r 6     // singly 
--[ 2021.09.28.11.15.01.019.0 ]--
r 6     // singly l
--[ 2021.09.28.11.15.02.063.0 ]--
r 6     // singly 
--[ 2021.09.28.11.15.02.211.0 ]--
r 6     // singly
--[ 2021.09.28.11.15.02.982.0 ]--
r 6     // singly-
--[ 2021.09.28.11.15.03.297.0 ]--
r 6     // singly-l
--[ 2021.09.28.11.15.03.416.0 ]--
r 6     // singly-li
--[ 2021.09.28.11.15.03.633.0 ]--
r 6     // singly-lin
--[ 2021.09.28.11.15.03.800.0 ]--
r 6     // singly-link
--[ 2021.09.28.11.15.03.919.0 ]--
r 6     // singly-linke
--[ 2021.09.28.11.15.04.187.0 ]--
r 6     // singly-linked
--[ 2021.09.28.11.15.04.264.0 ]--
r 6     // singly-linked 
--[ 2021.09.28.11.15.04.397.0 ]--
r 6     // singly-linked l
--[ 2021.09.28.11.15.04.551.0 ]--
r 6     // singly-linked li
--[ 2021.09.28.11.15.04.723.0 ]--
r 6     // singly-linked lis
--[ 2021.09.28.11.15.04.917.0 ]--
r 6     // singly-linked list
--[ 2021.09.28.11.15.05.184.0 ]--
r 6     // singly-linked list 
--[ 2021.09.28.11.15.06.019.0 ]--
r 6     // singly-linked list
--[ 2021.09.28.11.15.06.307.0 ]--
+ 7     
--[ 2021.09.28.11.15.07.722.0 ]--
r 7     p
--[ 2021.09.28.11.15.07.930.0 ]--
r 7     pr
--[ 2021.09.28.11.15.08.054.0 ]--
r 7     pri
--[ 2021.09.28.11.15.08.554.0 ]--
r 7     priv
--[ 2021.09.28.11.15.09.177.0 ]--
r 7     private
--[ 2021.09.28.11.15.09.193.0 ]--
r 7     private 
--[ 2021.09.28.11.15.10.613.0 ]--
r 7     private
--[ 2021.09.28.11.15.11.114.0 ]--
r 7     privat
--[ 2021.09.28.11.15.11.144.0 ]--
r 7     priva
--[ 2021.09.28.11.15.11.175.0 ]--
r 7     priv
--[ 2021.09.28.11.15.11.198.0 ]--
r 7     pri
--[ 2021.09.28.11.15.11.236.0 ]--
r 7     pr
--[ 2021.09.28.11.15.11.260.0 ]--
r 7     p
--[ 2021.09.28.11.15.11.288.0 ]--
r 7     
--[ 2021.09.28.11.15.11.349.0 ]--
- 7
--[ 2021.09.28.11.15.11.364.0 ]--
r 6     // singly-linked lis
--[ 2021.09.28.11.15.11.381.0 ]--
r 6     // singly-linked li
--[ 2021.09.28.11.15.13.239.0 ]--
r 6     // singly-linked l
--[ 2021.09.28.11.15.13.647.0 ]--
r 6     // singly-linked 
--[ 2021.09.28.11.15.14.161.0 ]--
r 6     // singly-linked
--[ 2021.09.28.11.15.14.187.0 ]--
r 6     // singly-linke
--[ 2021.09.28.11.15.14.208.0 ]--
r 6     // singly-link
--[ 2021.09.28.11.15.14.236.0 ]--
r 6     // singly-lin
--[ 2021.09.28.11.15.14.269.0 ]--
r 6     // singly-li
--[ 2021.09.28.11.15.14.297.0 ]--
r 6     // singly-l
--[ 2021.09.28.11.15.14.327.0 ]--
r 6     // singly-
--[ 2021.09.28.11.15.14.356.0 ]--
r 6     // singly
--[ 2021.09.28.11.15.14.386.0 ]--
r 6     // singl
--[ 2021.09.28.11.15.14.417.0 ]--
r 6     // sing
--[ 2021.09.28.11.15.14.447.0 ]--
r 6     // sin
--[ 2021.09.28.11.15.14.477.0 ]--
r 6     // si
--[ 2021.09.28.11.15.14.632.0 ]--
r 6     // s
--[ 2021.09.28.11.15.14.831.0 ]--
r 6     // 
--[ 2021.09.28.11.15.14.991.0 ]--
r 6     //
--[ 2021.09.28.11.15.15.150.0 ]--
r 6     /
--[ 2021.09.28.11.15.15.335.0 ]--
r 6     
--[ 2021.09.28.11.15.15.526.0 ]--
- 6
--[ 2021.09.28.11.15.15.712.0 ]--
r 5 public class Steque<Item> implements Iterable<Item> 
--[ 2021.09.28.11.15.17.090.0 ]--
+ 5 public class Steque<Item> implements Iterable<Item> {
+ 6     // singly-linked list
r 7     private 
--[ 2021.09.28.11.15.17.635.0 ]--
r 7     private
--[ 2021.09.28.11.15.17.798.0 ]--
r 7     privat
--[ 2021.09.28.11.15.18.299.0 ]--
r 7     priva
--[ 2021.09.28.11.15.18.328.0 ]--
r 7     priv
--[ 2021.09.28.11.15.18.358.0 ]--
r 7     pri
--[ 2021.09.28.11.15.18.388.0 ]--
r 7     pr
--[ 2021.09.28.11.15.18.417.0 ]--
r 7     p
--[ 2021.09.28.11.15.18.448.0 ]--
r 7     
--[ 2021.09.28.11.15.18.487.0 ]--
- 7
--[ 2021.09.28.11.15.18.509.0 ]--
r 6     // singly-linked lis
--[ 2021.09.28.11.15.18.538.0 ]--
r 6     // singly-linked li
--[ 2021.09.28.11.15.18.576.0 ]--
r 6     // singly-linked l
--[ 2021.09.28.11.15.18.601.0 ]--
r 6     // singly-linked 
--[ 2021.09.28.11.15.18.630.0 ]--
r 6     // singly-linked
--[ 2021.09.28.11.15.18.659.0 ]--
r 6     // singly-linke
--[ 2021.09.28.11.15.18.690.0 ]--
r 6     // singly-link
--[ 2021.09.28.11.15.18.854.0 ]--
r 6     // singly-lin
--[ 2021.09.28.11.15.19.346.0 ]--
r 6     // singly-li
--[ 2021.09.28.11.15.19.369.0 ]--
r 6     // singly-l
--[ 2021.09.28.11.15.19.399.0 ]--
r 6     // singly-
--[ 2021.09.28.11.15.19.430.0 ]--
r 6     // singly
--[ 2021.09.28.11.15.19.460.0 ]--
r 6     // singl
--[ 2021.09.28.11.15.19.489.0 ]--
r 6     // sing
--[ 2021.09.28.11.15.19.520.0 ]--
r 6     // sin
--[ 2021.09.28.11.15.19.550.0 ]--
r 6     // si
--[ 2021.09.28.11.15.19.581.0 ]--
r 6     // s
--[ 2021.09.28.11.15.19.724.0 ]--
r 6     // 
--[ 2021.09.28.11.15.19.952.0 ]--
r 6     //
--[ 2021.09.28.11.15.20.134.0 ]--
r 6     /
--[ 2021.09.28.11.15.20.294.0 ]--
r 6     
--[ 2021.09.28.11.15.20.473.0 ]--
- 6
--[ 2021.09.28.11.25.37.596.0 ]--
+ 6     
--[ 2021.09.28.11.25.38.100.0 ]--
+ 6     
--[ 2021.09.28.11.25.40.649.0 ]--
r 6     /
--[ 2021.09.28.11.25.40.766.0 ]--
r 6     //
--[ 2021.09.28.11.25.41.104.0 ]--
r 6     // 
--[ 2021.09.28.11.25.41.207.0 ]--
r 6     // s
--[ 2021.09.28.11.25.41.574.0 ]--
r 6     // si
--[ 2021.09.28.11.25.41.709.0 ]--
r 6     // sin
--[ 2021.09.28.11.25.41.838.0 ]--
r 6     // sing
--[ 2021.09.28.11.25.41.916.0 ]--
r 6     // singl
--[ 2021.09.28.11.25.42.077.0 ]--
r 6     // singly
--[ 2021.09.28.11.25.42.461.0 ]--
r 6     // singly-
--[ 2021.09.28.11.25.42.783.0 ]--
r 6     // singly-l
--[ 2021.09.28.11.25.42.925.0 ]--
r 6     // singly-li
--[ 2021.09.28.11.25.43.005.0 ]--
r 6     // singly-lin
--[ 2021.09.28.11.25.43.141.0 ]--
r 6     // singly-link
--[ 2021.09.28.11.25.43.281.0 ]--
r 6     // singly-linke
--[ 2021.09.28.11.25.43.457.0 ]--
r 6     // singly-linked
--[ 2021.09.28.11.25.43.517.0 ]--
r 6     // singly-linked 
--[ 2021.09.28.11.25.43.662.0 ]--
r 6     // singly-linked l
--[ 2021.09.28.11.25.43.758.0 ]--
r 6     // singly-linked li
--[ 2021.09.28.11.25.43.932.0 ]--
r 6     // singly-linked lis
--[ 2021.09.28.11.25.44.046.0 ]--
r 6     // singly-linked list
--[ 2021.09.28.11.25.45.647.0 ]--
+ 7     
--[ 2021.09.28.11.25.46.102.0 ]--
r 7     p
--[ 2021.09.28.11.25.46.653.0 ]--
r 7     pri
--[ 2021.09.28.11.25.46.790.0 ]--
r 7     priv
--[ 2021.09.28.11.25.47.137.0 ]--
r 7     private
--[ 2021.09.28.11.25.47.147.0 ]--
r 7     private 
--[ 2021.09.28.11.25.47.614.0 ]--
r 7     private s
--[ 2021.09.28.11.25.47.733.0 ]--
r 7     private st
--[ 2021.09.28.11.25.48.295.0 ]--
r 7     private static
--[ 2021.09.28.11.25.48.306.0 ]--
r 7     private static 
--[ 2021.09.28.11.25.50.062.0 ]--
r 7     private static c
--[ 2021.09.28.11.25.50.174.0 ]--
r 7     private static cl
--[ 2021.09.28.11.25.50.636.0 ]--
r 7     private static class
--[ 2021.09.28.11.25.50.656.0 ]--
r 7     private static class 
--[ 2021.09.28.11.25.52.256.0 ]--
r 7     private static class N
--[ 2021.09.28.11.25.52.408.0 ]--
r 7     private static class No
--[ 2021.09.28.11.25.52.493.0 ]--
r 7     private static class Nod
--[ 2021.09.28.11.25.52.971.0 ]--
r 7     private static class Node
--[ 2021.09.28.11.25.53.861.0 ]--
r 7     private static class Node<>
--[ 2021.09.28.11.25.54.492.0 ]--
r 7     private static class Node
--[ 2021.09.28.11.25.55.203.0 ]--
r 7     private static class Node<>
--[ 2021.09.28.11.25.55.880.0 ]--
r 7     private static class Node<I>
--[ 2021.09.28.11.25.56.365.0 ]--
r 7     private static class Node<It>
--[ 2021.09.28.11.25.56.716.0 ]--
r 7     private static class Node<Itm>
--[ 2021.09.28.11.25.57.296.0 ]--
r 7     private static class Node<It>
--[ 2021.09.28.11.25.57.444.0 ]--
r 7     private static class Node<Ite>
--[ 2021.09.28.11.25.58.120.0 ]--
r 7     private static class Node<Item>
--[ 2021.09.28.11.25.59.862.0 ]--
r 7     private static class Node<Item> 
--[ 2021.09.28.11.26.00.397.0 ]--
r 7     private static class Node<Item> {}
--[ 2021.09.28.11.26.00.616.0 ]--
+ 7     private static class Node<Item> {
r 8     }
--[ 2021.09.28.11.26.00.663.0 ]--
+ 8         
--[ 2021.09.28.11.26.02.693.0 ]--
r 8         I
--[ 2021.09.28.11.26.02.961.0 ]--
r 8         It
--[ 2021.09.28.11.26.03.156.0 ]--
r 8         Ite
--[ 2021.09.28.11.26.03.247.0 ]--
r 8         Item
--[ 2021.09.28.11.26.03.433.0 ]--
r 8         Item 
--[ 2021.09.28.11.26.03.568.0 ]--
r 8         Item i
--[ 2021.09.28.11.26.03.770.0 ]--
r 8         Item it
--[ 2021.09.28.11.26.04.084.0 ]--
r 8         Item item
--[ 2021.09.28.11.26.05.071.0 ]--
r 8         Item item 
--[ 2021.09.28.11.26.05.642.0 ]--
r 8         Item item =
--[ 2021.09.28.11.26.05.833.0 ]--
r 8         Item item = 
--[ 2021.09.28.11.26.06.361.0 ]--
r 8         Item item = n
--[ 2021.09.28.11.26.06.565.0 ]--
r 8         Item item = nu
--[ 2021.09.28.11.26.06.759.0 ]--
r 8         Item item = nul
--[ 2021.09.28.11.26.06.897.0 ]--
r 8         Item item = null
--[ 2021.09.28.11.26.07.118.0 ]--
r 8         Item item = null;
--[ 2021.09.28.11.26.07.525.0 ]--
+ 9         
--[ 2021.09.28.11.26.09.269.0 ]--
r 9         N
--[ 2021.09.28.11.26.09.445.0 ]--
r 9         No
--[ 2021.09.28.11.26.09.616.0 ]--
r 9         Nod
--[ 2021.09.28.11.26.09.822.0 ]--
r 9         Node
--[ 2021.09.28.11.26.10.732.0 ]--
r 9         Node<>
--[ 2021.09.28.11.26.11.809.0 ]--
r 9         Node<I>
--[ 2021.09.28.11.26.12.094.0 ]--
r 9         Node<It>
--[ 2021.09.28.11.26.12.334.0 ]--
r 9         Node<Ite>
--[ 2021.09.28.11.26.12.454.0 ]--
r 9         Node<Item>
--[ 2021.09.28.11.26.14.293.0 ]--
r 9         Node<Item> 
--[ 2021.09.28.11.26.14.946.0 ]--
r 9         Node<Item> n
--[ 2021.09.28.11.26.15.016.0 ]--
r 9         Node<Item> ne
--[ 2021.09.28.11.26.15.277.0 ]--
r 9         Node<Item> nex
--[ 2021.09.28.11.26.15.453.0 ]--
r 9         Node<Item> next
--[ 2021.09.28.11.26.15.604.0 ]--
r 9         Node<Item> next 
--[ 2021.09.28.11.26.16.373.0 ]--
r 9         Node<Item> next =
--[ 2021.09.28.11.26.16.718.0 ]--
r 9         Node<Item> next = 
--[ 2021.09.28.11.26.17.076.0 ]--
r 9         Node<Item> next =
--[ 2021.09.28.11.26.17.572.0 ]--
r 9         Node<Item> next = 
--[ 2021.09.28.11.26.17.756.0 ]--
r 9         Node<Item> next = n
--[ 2021.09.28.11.26.17.972.0 ]--
r 9         Node<Item> next = nu
--[ 2021.09.28.11.26.18.111.0 ]--
r 9         Node<Item> next = nul
--[ 2021.09.28.11.26.18.288.0 ]--
r 9         Node<Item> next = null
--[ 2021.09.28.11.26.18.413.0 ]--
r 9         Node<Item> next = null;
--[ 2021.09.28.11.26.18.709.0 ]--
+ 10         
--[ 2021.09.28.11.26.20.205.0 ]--
r 10         p
--[ 2021.09.28.11.26.20.330.0 ]--
r 10         pu
--[ 2021.09.28.11.26.20.757.0 ]--
r 10         public
--[ 2021.09.28.11.26.20.775.0 ]--
r 10         public 
--[ 2021.09.28.11.26.21.789.0 ]--
r 10         public N
--[ 2021.09.28.11.26.22.088.0 ]--
r 10         public No
--[ 2021.09.28.11.26.22.583.0 ]--
r 10         public Node
--[ 2021.09.28.11.26.23.354.0 ]--
r 10         public Node()
--[ 2021.09.28.11.26.23.944.0 ]--
r 10         public Node(I)
--[ 2021.09.28.11.26.24.644.0 ]--
r 10         public Node(Item)
--[ 2021.09.28.11.26.25.636.0 ]--
r 10         public Node(Item )
--[ 2021.09.28.11.26.25.749.0 ]--
r 10         public Node(Item i)
--[ 2021.09.28.11.26.26.236.0 ]--
r 10         public Node(Item item)
--[ 2021.09.28.11.26.37.839.0 ]--
r 10         public Node(Item item) 
--[ 2021.09.28.11.26.38.714.0 ]--
r 10         public Node(Item item) {}
--[ 2021.09.28.11.26.39.092.0 ]--
r 10         public Node(Item item) {t}
--[ 2021.09.28.11.26.39.219.0 ]--
r 10         public Node(Item item) {th}
--[ 2021.09.28.11.26.39.285.0 ]--
r 10         public Node(Item item) {thi}
--[ 2021.09.28.11.26.39.832.0 ]--
r 10         public Node(Item item) {this}
--[ 2021.09.28.11.26.40.212.0 ]--
r 10         public Node(Item item) {this.}
--[ 2021.09.28.11.26.41.921.0 ]--
r 10         public Node(Item item) {this.i}
--[ 2021.09.28.11.26.42.720.0 ]--
r 10         public Node(Item item) {this.item}
--[ 2021.09.28.11.26.43.281.0 ]--
r 10         public Node(Item item) {this.item }
--[ 2021.09.28.11.26.43.520.0 ]--
r 10         public Node(Item item) {this.item =}
--[ 2021.09.28.11.26.43.640.0 ]--
r 10         public Node(Item item) {this.item = }
--[ 2021.09.28.11.26.44.060.0 ]--
r 10         public Node(Item item) {this.item = i}
--[ 2021.09.28.11.26.44.557.0 ]--
r 10         public Node(Item item) {this.item = item}
--[ 2021.09.28.11.26.45.363.0 ]--
r 10         public Node(Item item) {this.item = item;}
--[ 2021.09.28.11.26.46.663.0 ]--
+ 11         
--[ 2021.09.28.11.26.47.742.0 ]--
r 11         p
--[ 2021.09.28.11.26.48.220.0 ]--
r 11         public
--[ 2021.09.28.11.26.48.237.0 ]--
r 11         public 
--[ 2021.09.28.11.26.48.721.0 ]--
r 11         public N
--[ 2021.09.28.11.26.48.911.0 ]--
r 11         public No
--[ 2021.09.28.11.26.49.051.0 ]--
r 11         public Nof
--[ 2021.09.28.11.26.49.290.0 ]--
r 11         public Nofr
--[ 2021.09.28.11.26.49.598.0 ]--
r 11         public Nof
--[ 2021.09.28.11.26.49.727.0 ]--
r 11         public No
--[ 2021.09.28.11.26.50.430.0 ]--
r 11         public Node
--[ 2021.09.28.11.26.51.630.0 ]--
r 11         public Node*
--[ 2021.09.28.11.26.52.012.0 ]--
r 11         public Node
--[ 2021.09.28.11.26.52.924.0 ]--
r 11         public Node()
--[ 2021.09.28.11.26.53.664.0 ]--
r 11         public Node(I)
--[ 2021.09.28.11.26.54.235.0 ]--
r 11         public Node(Item)
--[ 2021.09.28.11.26.54.882.0 ]--
r 11         public Node(Item )
--[ 2021.09.28.11.26.55.071.0 ]--
r 11         public Node(Item i)
--[ 2021.09.28.11.26.55.539.0 ]--
r 11         public Node(Item item)
--[ 2021.09.28.11.26.56.260.0 ]--
r 11         public Node(Item item,)
--[ 2021.09.28.11.26.56.350.0 ]--
r 11         public Node(Item item, )
--[ 2021.09.28.11.26.58.211.0 ]--
r 11         public Node(Item item, N)
--[ 2021.09.28.11.26.58.453.0 ]--
r 11         public Node(Item item, No)
--[ 2021.09.28.11.26.58.868.0 ]--
r 11         public Node(Item item, Node)
--[ 2021.09.28.11.26.59.993.0 ]--
r 11         public Node(Item item, Node<>)
--[ 2021.09.28.11.27.00.511.0 ]--
r 11         public Node(Item item, Node<I>)
--[ 2021.09.28.11.27.01.114.0 ]--
r 11         public Node(Item item, Node<Item>)
--[ 2021.09.28.11.27.02.836.0 ]--
r 11         public Node(Item item, Node<Item> )
--[ 2021.09.28.11.27.03.168.0 ]--
r 11         public Node(Item item, Node<Item> n)
--[ 2021.09.28.11.27.03.318.0 ]--
r 11         public Node(Item item, Node<Item> ne)
--[ 2021.09.28.11.27.03.775.0 ]--
r 11         public Node(Item item, Node<Item> next)
--[ 2021.09.28.11.27.06.000.0 ]--
r 11         public Node(Item item, Node<Item> next) 
--[ 2021.09.28.11.27.06.300.0 ]--
r 11         public Node(Item item, Node<Item> next) {}
--[ 2021.09.28.11.27.06.587.0 ]--
+ 11         public Node(Item item, Node<Item> next) {
r 12         }
--[ 2021.09.28.11.27.06.619.0 ]--
+ 12             
--[ 2021.09.28.11.27.08.071.0 ]--
r 12             t
--[ 2021.09.28.11.27.08.575.0 ]--
r 12             this
--[ 2021.09.28.11.27.08.835.0 ]--
r 12             this.
--[ 2021.09.28.11.27.09.091.0 ]--
r 12             this.i
--[ 2021.09.28.11.27.09.390.0 ]--
r 12             this.item
--[ 2021.09.28.11.27.09.796.0 ]--
r 12             this.item 
--[ 2021.09.28.11.27.10.220.0 ]--
r 12             this.item =
--[ 2021.09.28.11.27.10.338.0 ]--
r 12             this.item = 
--[ 2021.09.28.11.27.11.419.0 ]--
r 12             this.item = i
--[ 2021.09.28.11.27.11.905.0 ]--
r 12             this.item = item
--[ 2021.09.28.11.27.12.260.0 ]--
r 12             this.item = item;
--[ 2021.09.28.11.27.12.567.0 ]--
+ 13             
--[ 2021.09.28.11.27.13.167.0 ]--
r 13             t
--[ 2021.09.28.11.27.13.566.0 ]--
r 13             this
--[ 2021.09.28.11.27.14.088.0 ]--
r 13             this.
--[ 2021.09.28.11.27.14.585.0 ]--
r 13             this.i
--[ 2021.09.28.11.27.15.055.0 ]--
r 13             this.
--[ 2021.09.28.11.27.15.392.0 ]--
r 13             this
--[ 2021.09.28.11.27.16.325.0 ]--
r 13             this.
--[ 2021.09.28.11.27.16.602.0 ]--
r 13             this.n
--[ 2021.09.28.11.27.17.113.0 ]--
r 13             this.next
--[ 2021.09.28.11.27.17.548.0 ]--
r 13             this.next 
--[ 2021.09.28.11.27.17.984.0 ]--
r 13             this.next =
--[ 2021.09.28.11.27.18.105.0 ]--
r 13             this.next = 
--[ 2021.09.28.11.27.19.381.0 ]--
r 13             this.next = n
--[ 2021.09.28.11.27.20.040.0 ]--
r 13             this.next = next
--[ 2021.09.28.11.27.20.475.0 ]--
r 13             this.next = next;
--[ 2021.09.28.11.27.24.192.0 ]--
- 18
--[ 2021.09.28.11.27.25.986.0 ]--
- 17
r 17     public Steque() { }
--[ 2021.09.28.11.27.26.782.0 ]--
r 17     public Steque() {}
--[ 2021.09.28.11.27.36.790.0 ]--
+ 16     
--[ 2021.09.28.11.27.39.904.0 ]--
+ 16     
--[ 2021.09.28.11.27.41.512.0 ]--
r 17     p
--[ 2021.09.28.11.27.42.146.0 ]--
r 17     public
--[ 2021.09.28.11.27.42.156.0 ]--
r 17     public 
--[ 2021.09.28.11.27.42.666.0 ]--
r 17     public i
--[ 2021.09.28.11.27.43.178.0 ]--
r 17     public int
--[ 2021.09.28.11.27.44.439.0 ]--
r 17     public int 
--[ 2021.09.28.11.27.44.592.0 ]--
r 17     public int o
--[ 2021.09.28.11.27.44.708.0 ]--
r 17     public int op
--[ 2021.09.28.11.27.45.253.0 ]--
r 17     public int opc
--[ 2021.09.28.11.27.45.380.0 ]--
r 17     public int opco
--[ 2021.09.28.11.27.45.480.0 ]--
r 17     public int opcou
--[ 2021.09.28.11.27.45.664.0 ]--
r 17     public int opcoun
--[ 2021.09.28.11.27.45.808.0 ]--
r 17     public int opcount
--[ 2021.09.28.11.27.47.182.0 ]--
r 17     public int opcount 
--[ 2021.09.28.11.27.47.297.0 ]--
r 17     public int opcount =
--[ 2021.09.28.11.27.47.413.0 ]--
r 17     public int opcount = 
--[ 2021.09.28.11.27.47.616.0 ]--
r 17     public int opcount = 0
--[ 2021.09.28.11.27.48.429.0 ]--
r 17     public int opcount = 0;
--[ 2021.09.28.11.27.48.705.0 ]--
+ 18     
--[ 2021.09.28.11.27.49.493.0 ]--
r 18     p
--[ 2021.09.28.11.27.49.723.0 ]--
r 18     pu
--[ 2021.09.28.11.27.50.047.0 ]--
r 18     public
--[ 2021.09.28.11.27.50.055.0 ]--
r 18     public 
--[ 2021.09.28.11.27.51.510.0 ]--
r 18     public i
--[ 2021.09.28.11.27.52.033.0 ]--
r 18     public int
--[ 2021.09.28.11.27.52.605.0 ]--
r 18     public int 
--[ 2021.09.28.11.27.52.731.0 ]--
r 18     public int d
--[ 2021.09.28.11.27.52.866.0 ]--
r 18     public int di
--[ 2021.09.28.11.27.53.276.0 ]--
r 18     public int d
--[ 2021.09.28.11.27.53.432.0 ]--
r 18     public int 
--[ 2021.09.28.11.27.53.925.0 ]--
r 18     public int s
--[ 2021.09.28.11.27.54.028.0 ]--
r 18     public int si
--[ 2021.09.28.11.27.54.672.0 ]--
r 18     public int siz
--[ 2021.09.28.11.27.55.093.0 ]--
r 18     public int size
--[ 2021.09.28.11.27.56.077.0 ]--
r 18     public int size 
--[ 2021.09.28.11.27.56.729.0 ]--
r 18     public int size =
--[ 2021.09.28.11.27.56.963.0 ]--
r 18     public int size =0
--[ 2021.09.28.11.27.57.306.0 ]--
r 18     public int size =0;
--[ 2021.09.28.11.27.57.547.0 ]--
+ 19     
--[ 2021.09.28.11.27.58.805.0 ]--
r 19     p
--[ 2021.09.28.11.27.58.997.0 ]--
r 19     pr
--[ 2021.09.28.11.27.59.362.0 ]--
r 19     private
--[ 2021.09.28.11.27.59.378.0 ]--
r 19     private 
--[ 2021.09.28.11.28.00.015.0 ]--
+ 20     
--[ 2021.09.28.11.28.00.299.0 ]--
r 20     p
--[ 2021.09.28.11.28.00.455.0 ]--
r 20     pr
--[ 2021.09.28.11.28.01.012.0 ]--
r 20     pri
--[ 2021.09.28.11.28.01.172.0 ]--
r 20     priv
--[ 2021.09.28.11.28.02.140.0 ]--
r 20     pri
--[ 2021.09.28.11.28.02.276.0 ]--
r 20     pr
--[ 2021.09.28.11.28.02.435.0 ]--
r 20     p
--[ 2021.09.28.11.28.02.583.0 ]--
r 20     
--[ 2021.09.28.11.28.02.731.0 ]--
- 19
r 19     private
--[ 2021.09.28.11.28.02.868.0 ]--
r 19     privat
--[ 2021.09.28.11.28.03.738.0 ]--
r 19     private
--[ 2021.09.28.11.28.03.929.0 ]--
r 19     private 
--[ 2021.09.28.11.28.05.192.0 ]--
r 19     private N
--[ 2021.09.28.11.28.05.367.0 ]--
r 19     private No
--[ 2021.09.28.11.28.05.755.0 ]--
r 19     private Node
--[ 2021.09.28.11.28.06.509.0 ]--
r 19     private Node<>
--[ 2021.09.28.11.28.06.982.0 ]--
r 19     private Node<I>
--[ 2021.09.28.11.28.07.627.0 ]--
r 19     private Node<Item>
--[ 2021.09.28.11.28.09.469.0 ]--
r 19     private Node<Item> 
--[ 2021.09.28.11.28.09.796.0 ]--
r 19     private Node<Item> f
--[ 2021.09.28.11.28.10.025.0 ]--
r 19     private Node<Item> fi
--[ 2021.09.28.11.28.10.888.0 ]--
r 19     private Node<Item> fir
--[ 2021.09.28.11.28.11.141.0 ]--
r 19     private Node<Item> firs
--[ 2021.09.28.11.28.11.800.0 ]--
r 19     private Node<Item> first
--[ 2021.09.28.11.28.12.022.0 ]--
r 19     private Node<Item> first 
--[ 2021.09.28.11.28.12.266.0 ]--
r 19     private Node<Item> first =
--[ 2021.09.28.11.28.12.382.0 ]--
r 19     private Node<Item> first = 
--[ 2021.09.28.11.28.13.717.0 ]--
r 19     private Node<Item> first = n
--[ 2021.09.28.11.28.13.931.0 ]--
r 19     private Node<Item> first = nu
--[ 2021.09.28.11.28.14.047.0 ]--
r 19     private Node<Item> first = nul
--[ 2021.09.28.11.28.14.237.0 ]--
r 19     private Node<Item> first = null
--[ 2021.09.28.11.28.14.323.0 ]--
r 19     private Node<Item> first = null;
--[ 2021.09.28.11.28.14.609.0 ]--
+ 20     
--[ 2021.09.28.11.28.15.359.0 ]--
r 20     p
--[ 2021.09.28.11.28.16.629.0 ]--
r 20     pr
--[ 2021.09.28.11.28.17.163.0 ]--
r 20     private
--[ 2021.09.28.11.28.17.171.0 ]--
r 20     private 
--[ 2021.09.28.11.28.18.470.0 ]--
r 20     private N
--[ 2021.09.28.11.28.19.132.0 ]--
r 20     private Node
--[ 2021.09.28.11.28.19.836.0 ]--
r 20     private NodeI
--[ 2021.09.28.11.28.20.410.0 ]--
r 20     private NodeIterator
--[ 2021.09.28.11.28.20.425.0 ]--
r 20     private org.w3c.dom.traversal.NodeIterator
--[ 2021.09.28.11.28.20.441.0 ]--
r 1 import org.w3c.dom.traversal.NodeIterator;import java.util.ConcurrentModificationException;
--[ 2021.09.28.11.28.20.454.0 ]--
r 20     private NodeIterator
--[ 2021.09.28.11.28.20.473.0 ]--
+ 1 import org.w3c.dom.traversal.NodeIterator;
+ 2 
r 3 import java.util.ConcurrentModificationException;
--[ 2021.09.28.11.28.20.844.0 ]--
r 22     private NodeIterato
--[ 2021.09.28.11.28.21.039.0 ]--
r 22     private NodeIterat
--[ 2021.09.28.11.28.21.187.0 ]--
r 22     private NodeItera
--[ 2021.09.28.11.28.21.352.0 ]--
r 22     private NodeIter
--[ 2021.09.28.11.28.21.502.0 ]--
r 22     private NodeIte
--[ 2021.09.28.11.28.21.653.0 ]--
r 22     private NodeIt
--[ 2021.09.28.11.28.21.803.0 ]--
r 22     private NodeI
--[ 2021.09.28.11.28.21.963.0 ]--
r 22     private Node
--[ 2021.09.28.11.28.22.468.0 ]--
r 22     private Node<>
--[ 2021.09.28.11.28.23.248.0 ]--
r 22     private Node<I>
--[ 2021.09.28.11.28.23.865.0 ]--
r 22     private Node<Item>
--[ 2021.09.28.11.28.24.882.0 ]--
r 22     private Node<Item> 
--[ 2021.09.28.11.28.25.551.0 ]--
r 22     private Node<Item> l
--[ 2021.09.28.11.28.25.939.0 ]--
r 22     private Node<Item> ls
--[ 2021.09.28.11.28.26.132.0 ]--
r 22     private Node<Item> lst
--[ 2021.09.28.11.28.26.647.0 ]--
r 22     private Node<Item> ls
--[ 2021.09.28.11.28.26.771.0 ]--
r 22     private Node<Item> l
--[ 2021.09.28.11.28.26.902.0 ]--
r 22     private Node<Item> la
--[ 2021.09.28.11.28.27.160.0 ]--
r 22     private Node<Item> las
--[ 2021.09.28.11.28.27.230.0 ]--
r 22     private Node<Item> last
--[ 2021.09.28.11.28.27.572.0 ]--
r 22     private Node<Item> last 
--[ 2021.09.28.11.28.28.264.0 ]--
r 22     private Node<Item> last =
--[ 2021.09.28.11.28.28.832.0 ]--
r 22     private Node<Item> last = 
--[ 2021.09.28.11.28.29.023.0 ]--
r 22     private Node<Item> last = n
--[ 2021.09.28.11.28.29.223.0 ]--
r 22     private Node<Item> last = nu
--[ 2021.09.28.11.28.29.376.0 ]--
r 22     private Node<Item> last = nul
--[ 2021.09.28.11.28.29.515.0 ]--
r 22     private Node<Item> last = null
--[ 2021.09.28.11.28.29.684.0 ]--
r 22     private Node<Item> last = null;
--[ 2021.09.28.11.28.33.430.0 ]--
r 18 
r 23 
--[ 2021.09.28.11.28.33.445.0 ]--
+ 22     private Node<Item> last = null;
--[ 2021.09.28.11.28.35.235.0 ]--
- 22
--[ 2021.09.28.11.28.38.739.0 ]--
r 28         return ;
--[ 2021.09.28.11.28.39.214.0 ]--
r 28         return s;
--[ 2021.09.28.11.28.39.362.0 ]--
r 28         return si;
--[ 2021.09.28.11.28.39.460.0 ]--
r 28         return siz;
--[ 2021.09.28.11.28.39.868.0 ]--
r 28         return size;
--[ 2021.09.28.11.29.21.508.0 ]--
r 24     public Steque() { }
--[ 2021.09.28.11.30.42.131.0 ]--
r 33         return s;
--[ 2021.09.28.11.30.42.315.0 ]--
r 33         return si;
--[ 2021.09.28.11.30.42.561.0 ]--
r 33         return siz;
--[ 2021.09.28.11.30.42.820.0 ]--
r 33         return size;
--[ 2021.09.28.11.30.43.007.0 ]--
r 33         return size ;
--[ 2021.09.28.11.30.43.420.0 ]--
r 33         return size;
--[ 2021.09.28.11.30.43.646.0 ]--
r 33         return size=;
--[ 2021.09.28.11.30.43.787.0 ]--
r 33         return size==;
--[ 2021.09.28.11.30.44.506.0 ]--
r 33         return size==0;
--[ 2021.09.28.11.31.01.012.0 ]--
UpdateTree (AD): 6 0
+ /out/production/P02_DataTypes/algs4.jar
+ /out/production/P02_DataTypes/stdlib.jar
+ /out/production/P02_DataTypes/Steque.class
+ /out/production/P02_DataTypes/Steque$Node.class
+ /out/production/P02_DataTypes/MinimumStack.class
+ /out/production/P02_DataTypes/OnePointerQueue.class

--[ 2021.09.28.11.31.01.015.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.09.28.11.49.22.731.0 ]--
DisposeComponent
--[ 2021.09.29.19.45.26.353.0 ]--
NewLogger: P02_DataTypes
Version: 1.5
--[ 2021.09.29.19.45.26.437.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2021.09.29.19.45.26.440.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2021.09.29.19.45.26.443.0 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2021.09.29.19.45.26.446.0 ]--
InitFile: /.cos265


--[ 2021.09.29.19.45.26.448.0 ]--
InitFile: /src/Steque.java
import org.w3c.dom.traversal.NodeIterator;

import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    // singly-linked list
    private static class Node<Item> {
        Item item = null;
        Node<Item> next = null;
        public Node(Item item) {this.item = item;}
        public Node(Item item, Node<Item> next) {
            this.item = item;
            this.next = next;
        }
    }

    public int opcount = 0;
    public int size =0;
    private Node<Item> first = null;
    private Node<Item> last = null;

    public Steque() { }

    // returns the number of items stored
    public int size() {
        return size;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return size==0;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {

    }

    // pushes item to top of steque
    public void push(Item item) {

    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {

    }
}

--[ 2021.09.29.19.45.26.452.0 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2021.09.29.19.45.55.141.0 ]--
UpdateTree (AD): 1 0
+ /.idea/vcs.xml

--[ 2021.09.29.19.45.55.659.0 ]--
DisposeComponent
--[ 2021.09.30.21.22.49.982.0 ]--
NewLogger: P02_DataTypes
Version: 1.5
--[ 2021.09.30.21.22.50.058.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/vcs.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2021.09.30.21.22.50.063.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2021.09.30.21.22.50.066.0 ]--
InitFile: /.cos265


--[ 2021.09.30.21.22.50.070.0 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2021.09.30.21.22.50.076.0 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2021.09.30.21.22.50.079.0 ]--
InitFile: /src/Steque.java
import org.w3c.dom.traversal.NodeIterator;

import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    // singly-linked list
    private static class Node<Item> {
        Item item = null;
        Node<Item> next = null;
        public Node(Item item) {this.item = item;}
        public Node(Item item, Node<Item> next) {
            this.item = item;
            this.next = next;
        }
    }

    public int opcount = 0;
    public int size =0;
    private Node<Item> first = null;
    private Node<Item> last = null;

    public Steque() { }

    // returns the number of items stored
    public int size() {
        return size;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return size==0;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {

    }

    // pushes item to top of steque
    public void push(Item item) {

    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {

    }
}

--[ 2021.09.30.21.22.59.900.0 ]--
DisposeComponent
--[ 2021.09.30.22.03.25.287.0 ]--
NewLogger: P02_DataTypes
Version: 1.5
--[ 2021.09.30.22.03.25.304.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/vcs.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2021.09.30.22.03.25.306.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2021.09.30.22.03.25.310.0 ]--
InitFile: /.cos265


--[ 2021.09.30.22.03.25.312.0 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2021.09.30.22.03.25.314.0 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2021.09.30.22.03.25.317.0 ]--
InitFile: /src/Steque.java
import org.w3c.dom.traversal.NodeIterator;

import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    // singly-linked list
    private static class Node<Item> {
        Item item = null;
        Node<Item> next = null;
        public Node(Item item) {this.item = item;}
        public Node(Item item, Node<Item> next) {
            this.item = item;
            this.next = next;
        }
    }

    public int opcount = 0;
    public int size =0;
    private Node<Item> first = null;
    private Node<Item> last = null;

    public Steque() { }

    // returns the number of items stored
    public int size() {
        return size;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return size==0;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {

    }

    // pushes item to top of steque
    public void push(Item item) {

    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {

    }
}

--[ 2021.09.30.22.04.09.001.0 ]--
DisposeComponent
--[ 2021.10.01.13.20.31.871.0 ]--
NewLogger: P02_DataTypes
Version: 1.5
--[ 2021.10.01.13.20.31.954.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/vcs.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2021.10.01.13.20.31.957.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2021.10.01.13.20.31.962.0 ]--
InitFile: /.cos265


--[ 2021.10.01.13.20.31.968.0 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2021.10.01.13.20.31.970.0 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2021.10.01.13.20.31.973.0 ]--
InitFile: /src/Steque.java
import org.w3c.dom.traversal.NodeIterator;

import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    // singly-linked list
    private static class Node<Item> {
        Item item = null;
        Node<Item> next = null;
        public Node(Item item) {this.item = item;}
        public Node(Item item, Node<Item> next) {
            this.item = item;
            this.next = next;
        }
    }

    public int opcount = 0;
    public int size =0;
    private Node<Item> first = null;
    private Node<Item> last = null;

    public Steque() { }

    // returns the number of items stored
    public int size() {
        return size;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return size==0;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {

    }

    // pushes item to top of steque
    public void push(Item item) {

    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {

    }
}

--[ 2021.10.01.13.20.41.602.0 ]--
DisposeComponent
--[ 2021.10.05.10.00.24.535.0 ]--
NewLogger: P02_DataTypes
Version: 1.5
--[ 2021.10.05.10.00.24.556.0 ]--
InitTree:
/out/production/P02_DataTypes/algs4.jar
/out/production/P02_DataTypes/stdlib.jar
/out/production/P02_DataTypes/Steque.class
/out/production/P02_DataTypes/Steque$Node.class
/out/production/P02_DataTypes/MinimumStack.class
/out/production/P02_DataTypes/OnePointerQueue.class
/src/algs4.jar
/src/stdlib.jar
/src/Steque.java
/src/MinimumStack.java
/src/OnePointerQueue.java
/.log/history.log
/.idea/copyright/profiles_settings.xml
/.idea/libraries/algs4.xml
/.idea/libraries/stdlib.xml
/.idea/vcs.xml
/.idea/misc.xml
/.idea/.gitignore
/.idea/modules.xml
/.idea/compiler.xml
/.idea/workspace.xml
/.idea/uiDesigner.xml
/.cos265
/readme.html
/P02_DataTypes.iml

--[ 2021.10.05.10.00.24.560.0 ]--
InitFile: /P02_DataTypes.iml
<?xml version="1.0" encoding="UTF-8"?>
<module type="JAVA_MODULE" version="4">
  <component name="NewModuleRootManager" inherit-compiler-output="true">
    <exclude-output />
    <content url="file://$MODULE_DIR$">
      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
    </content>
    <orderEntry type="inheritedJdk" />
    <orderEntry type="sourceFolder" forTests="false" />
    <orderEntry type="library" name="algs4" level="project" />
    <orderEntry type="library" name="stdlib" level="project" />
  </component>
</module>

--[ 2021.10.05.10.00.24.564.0 ]--
InitFile: /.cos265


--[ 2021.10.05.10.00.24.567.0 ]--
InitFile: /src/OnePointerQueue.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class OnePointerQueue<Item> implements Iterable<Item> {
    public OnePointerQueue() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // enqueue item to "back"
    public void enqueue(Item item) {

    }

    // dequeue item from "front"
    public Item dequeue() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) {

    }
}

--[ 2021.10.05.10.00.24.571.0 ]--
InitFile: /src/MinimumStack.java
import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class MinimumStack<Item extends Comparable> implements Iterable<Item> {
    public MinimumStack() {

    }

    // returns the number of items stored
    public int size() {
        return 0;
    }

    // returns true iff empty
    public boolean isEmpty() {
        return true;
    }

    // push item onto stack
    public void push(Item item) {

    }

    // pop and return the top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns the minimum item in constant time
    public Item minimum() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    public static void main(String[] args) {

    }
}

--[ 2021.10.05.10.00.24.573.0 ]--
InitFile: /src/Steque.java
import org.w3c.dom.traversal.NodeIterator;

import java.util.ConcurrentModificationException;
import java.util.Iterator;
import java.util.NoSuchElementException;

public class Steque<Item> implements Iterable<Item> {
    // singly-linked list
    private static class Node<Item> {
        Item item = null;
        Node<Item> next = null;
        public Node(Item item) {this.item = item;}
        public Node(Item item, Node<Item> next) {
            this.item = item;
            this.next = next;
        }
    }

    public int opcount = 0;
    public int size =0;
    private Node<Item> first = null;
    private Node<Item> last = null;

    public Steque() { }

    // returns the number of items stored
    public int size() {
        return size;
    }

    // returns true iff steque is empty
    public boolean isEmpty() {
        return size==0;
    }

    // enqueues item to bottom of steque
    public void enqueue(Item item) {

    }

    // pushes item to top of steque
    public void push(Item item) {

    }

    // pops and returns top item
    public Item pop() throws NoSuchElementException {
        return null;
    }

    // returns new Iterator<Item> that iterates over items in steque
    @Override
    public Iterator<Item> iterator() {
        return null;
    }

    // perform unit testing here
    public static void main(String[] args) throws NoSuchElementException {

    }
}

--[ 2021.10.05.10.22.27.981.0 ]--
:/src/Steque.java
r 38     
--[ 2021.10.05.10.22.28.280.0 ]--
r 38         
--[ 2021.10.05.10.23.15.729.0 ]--
r 38         N
--[ 2021.10.05.10.23.16.170.0 ]--
r 38         No
--[ 2021.10.05.10.23.16.286.0 ]--
r 38         Nod
--[ 2021.10.05.10.23.16.564.0 ]--
r 38         Node
--[ 2021.10.05.10.23.18.549.0 ]--
r 38         Node<>
--[ 2021.10.05.10.23.19.203.0 ]--
r 38         Node<I>
--[ 2021.10.05.10.23.19.401.0 ]--
r 38         Node<It>
--[ 2021.10.05.10.23.19.939.0 ]--
r 38         Node<Item>
--[ 2021.10.05.10.23.22.126.0 ]--
r 38         Node<Item> 
--[ 2021.10.05.10.23.29.461.0 ]--
r 38         Node<Item>
--[ 2021.10.05.10.23.29.766.0 ]--
r 38         Node<Item>/.
--[ 2021.10.05.10.23.30.225.0 ]--
r 38         Node<Item>/
--[ 2021.10.05.10.23.30.343.0 ]--
r 38         Node<Item>
--[ 2021.10.05.10.23.30.574.0 ]--
r 38         Node<Item>/
--[ 2021.10.05.10.23.31.077.0 ]--
r 38         Node<Item>
--[ 2021.10.05.10.23.31.329.0 ]--
r 38         Node<Item>.
--[ 2021.10.05.10.23.32.137.0 ]--
r 38         Node<Item>
--[ 2021.10.05.10.23.34.062.0 ]--
r 38         Node<Item> 
--[ 2021.10.05.10.23.34.350.0 ]--
r 38         Node<Item> n
--[ 2021.10.05.10.23.35.637.0 ]--
r 38         Node<Item> ne
--[ 2021.10.05.10.23.36.166.0 ]--
r 38         Node<Item> nex
--[ 2021.10.05.10.23.36.973.0 ]--
r 38         Node<Item> ne
--[ 2021.10.05.10.23.37.248.0 ]--
r 38         Node<Item> n
--[ 2021.10.05.10.23.37.443.0 ]--
r 38         Node<Item> 
--[ 2021.10.05.10.23.52.295.0 ]--
r 38         Node<Item>
--[ 2021.10.05.10.23.52.477.0 ]--
r 38         Node<Item
--[ 2021.10.05.10.23.52.645.0 ]--
r 38         Node<Ite
--[ 2021.10.05.10.23.52.798.0 ]--
r 38         Node<It
--[ 2021.10.05.10.23.52.948.0 ]--
r 38         Node<I
--[ 2021.10.05.10.23.53.124.0 ]--
r 38         Node<
--[ 2021.10.05.10.23.53.837.0 ]--
r 38         Node
--[ 2021.10.05.10.23.54.142.0 ]--
r 38         Nod
--[ 2021.10.05.10.23.54.314.0 ]--
r 38         No
--[ 2021.10.05.10.23.54.470.0 ]--
r 38         N
--[ 2021.10.05.10.23.54.605.0 ]--
r 38         
--[ 2021.10.05.10.23.55.594.0 ]--
r 38         i
--[ 2021.10.05.10.23.55.879.0 ]--
r 38         it
--[ 2021.10.05.10.23.56.007.0 ]--
r 38         ite
--[ 2021.10.05.10.23.56.118.0 ]--
r 38         item
--[ 2021.10.05.10.23.56.361.0 ]--
r 38         item.
--[ 2021.10.05.10.23.57.173.0 ]--
r 38         item.n
--[ 2021.10.05.10.23.57.644.0 ]--
r 38         item.ne
--[ 2021.10.05.10.23.58.182.0 ]--
r 38         item.nex
--[ 2021.10.05.10.23.58.631.0 ]--
r 38         item.ne
--[ 2021.10.05.10.23.58.767.0 ]--
r 38         item.n
--[ 2021.10.05.10.23.58.926.0 ]--
r 38         item.
--[ 2021.10.05.10.23.59.318.0 ]--
r 38         item
--[ 2021.10.05.10.23.59.549.0 ]--
r 38         ite
--[ 2021.10.05.10.23.59.726.0 ]--
r 38         it
--[ 2021.10.05.10.23.59.870.0 ]--
r 38         i
--[ 2021.10.05.10.24.00.125.0 ]--
r 38         
--[ 2021.10.05.10.24.20.943.0 ]--
r 38         i
--[ 2021.10.05.10.24.21.045.0 ]--
r 38         it
--[ 2021.10.05.10.24.21.223.0 ]--
r 38         ite
--[ 2021.10.05.10.24.21.306.0 ]--
r 38         item
--[ 2021.10.05.10.24.21.550.0 ]--
r 38         item.
--[ 2021.10.05.10.24.25.668.0 ]--
r 38         item.i
--[ 2021.10.05.10.24.25.821.0 ]--
r 38         item.it
--[ 2021.10.05.10.24.26.826.0 ]--
r 38         item.i
--[ 2021.10.05.10.24.26.971.0 ]--
r 38         item.
--[ 2021.10.05.10.24.27.391.0 ]--
r 38         item.n
--[ 2021.10.05.10.24.27.435.0 ]--
r 38         item.ne
--[ 2021.10.05.10.24.28.295.0 ]--
r 38         item.n
--[ 2021.10.05.10.24.28.452.0 ]--
r 38         item.
--[ 2021.10.05.10.24.30.694.0 ]--
r 38         item
--[ 2021.10.05.10.24.30.912.0 ]--
r 38         ite
--[ 2021.10.05.10.24.31.094.0 ]--
r 38         it
--[ 2021.10.05.10.24.31.282.0 ]--
r 38         i
--[ 2021.10.05.10.24.31.513.0 ]--
r 38         
--[ 2021.10.05.10.24.38.325.0 ]--
r 38         i
--[ 2021.10.05.10.24.38.437.0 ]--
r 38         it
--[ 2021.10.05.10.24.38.675.0 ]--
r 38         ite
--[ 2021.10.05.10.24.38.750.0 ]--
r 38         item
--[ 2021.10.05.10.24.38.878.0 ]--
r 38         item.
--[ 2021.10.05.10.24.39.525.0 ]--
r 38         item.n
--[ 2021.10.05.10.24.39.619.0 ]--
r 38         item.ne
--[ 2021.10.05.10.24.40.748.0 ]--
r 38         item.nex
--[ 2021.10.05.10.24.41.676.0 ]--
r 38         item.ne
--[ 2021.10.05.10.24.41.833.0 ]--
r 38         item.n
--[ 2021.10.05.10.24.41.978.0 ]--
r 38         item.
--[ 2021.10.05.10.24.42.126.0 ]--
r 38         item
--[ 2021.10.05.10.24.42.280.0 ]--
r 38         ite
--[ 2021.10.05.10.24.42.439.0 ]--
r 38         it
--[ 2021.10.05.10.24.42.566.0 ]--
r 38         i
--[ 2021.10.05.10.24.42.701.0 ]--
r 38         
--[ 2021.10.05.10.24.42.935.0 ]--
r 38         t
--[ 2021.10.05.10.24.43.111.0 ]--
r 38         th
--[ 2021.10.05.10.24.43.134.0 ]--
r 38         thi
--[ 2021.10.05.10.24.43.395.0 ]--
r 38         this
--[ 2021.10.05.10.24.43.714.0 ]--
r 38         this.
--[ 2021.10.05.10.24.44.169.0 ]--
r 38         this.i
--[ 2021.10.05.10.24.44.609.0 ]--
r 38         this.it
--[ 2021.10.05.10.24.45.907.0 ]--
r 38         this.i
--[ 2021.10.05.10.24.46.047.0 ]--
r 38         this.
--[ 2021.10.05.10.24.46.278.0 ]--
r 38         this.n
--[ 2021.10.05.10.24.46.661.0 ]--
r 38         this.ne
--[ 2021.10.05.10.24.47.246.0 ]--
r 38         this.n
--[ 2021.10.05.10.24.47.380.0 ]--
r 38         this.
--[ 2021.10.05.10.24.47.499.0 ]--
r 38         this
--[ 2021.10.05.10.24.47.655.0 ]--
r 38         thi
--[ 2021.10.05.10.24.47.781.0 ]--
r 38         th
--[ 2021.10.05.10.24.47.982.0 ]--
r 38         t
--[ 2021.10.05.10.24.48.253.0 ]--
r 38         
--[ 2021.10.05.10.29.03.871.0 ]--
r 38         i
--[ 2021.10.05.10.29.03.929.0 ]--
r 38         if
--[ 2021.10.05.10.29.04.046.0 ]--
r 38         if 
--[ 2021.10.05.10.29.06.876.0 ]--
r 38         if s
--[ 2021.10.05.10.29.08.363.0 ]--
r 38         if 
--[ 2021.10.05.10.29.09.034.0 ]--
r 38         if
--[ 2021.10.05.10.29.09.372.0 ]--
r 38         if 
--[ 2021.10.05.10.29.09.722.0 ]--
r 38         if ()
--[ 2021.10.05.10.29.10.281.0 ]--
r 38         if (i)
--[ 2021.10.05.10.29.10.326.0 ]--
r 38         if (is)
--[ 2021.10.05.10.29.10.956.0 ]--
r 38         if (isEmpty)
--[ 2021.10.05.10.29.10.967.0 ]--
r 38         if (isEmpty())
--[ 2021.10.05.10.29.12.308.0 ]--
r 38         if (isEmpty()) 
--[ 2021.10.05.10.29.12.920.0 ]--
r 38         if (isEmpty()) {
--[ 2021.10.05.10.29.13.317.0 ]--
+ 39 
+ 40 }
--[ 2021.10.05.10.29.13.351.0 ]--
r 40         }
--[ 2021.10.05.10.29.13.373.0 ]--
r 39             
--[ 2021.10.05.10.29.15.359.0 ]--
r 39             i
--[ 2021.10.05.10.29.16.199.0 ]--
r 39             item
--[ 2021.10.05.10.29.18.123.0 ]--
r 39             ite
--[ 2021.10.05.10.29.18.283.0 ]--
r 39             it
--[ 2021.10.05.10.29.18.475.0 ]--
r 39             i
--[ 2021.10.05.10.29.18.973.0 ]--
r 39             
--[ 2021.10.05.10.29.19.788.0 ]--
r 39             f
--[ 2021.10.05.10.29.20.425.0 ]--
r 39             first
--[ 2021.10.05.10.29.20.964.0 ]--
r 39             first 
--[ 2021.10.05.10.29.21.555.0 ]--
r 39             first =
--[ 2021.10.05.10.29.22.003.0 ]--
r 39             first = 
--[ 2021.10.05.10.29.23.438.0 ]--
r 39             first = i
--[ 2021.10.05.10.29.24.099.0 ]--
r 39             first = item
--[ 2021.10.05.10.29.25.157.0 ]--
r 39             first = item;
--[ 2021.10.05.10.29.29.744.0 ]--
r 39             tfirst = item;
--[ 2021.10.05.10.29.29.848.0 ]--
r 39             thfirst = item;
--[ 2021.10.05.10.29.29.929.0 ]--
r 39             thifirst = item;
--[ 2021.10.05.10.29.30.158.0 ]--
r 39             thisfirst = item;
--[ 2021.10.05.10.29.30.311.0 ]--
r 39             this.first = item;
--[ 2021.10.05.10.29.31.967.0 ]--
r 39             thisfirst = item;
--[ 2021.10.05.10.29.32.118.0 ]--
r 39             thifirst = item;
--[ 2021.10.05.10.29.32.280.0 ]--
r 39             thfirst = item;
--[ 2021.10.05.10.29.32.429.0 ]--
r 39             tfirst = item;
--[ 2021.10.05.10.29.32.600.0 ]--
r 39             first = item;
--[ 2021.10.05.10.31.50.003.0 ]--
+ 40             
--[ 2021.10.05.10.31.50.860.0 ]--
r 40             l
--[ 2021.10.05.10.31.50.951.0 ]--
r 40             la
--[ 2021.10.05.10.31.51.122.0 ]--
r 40             las
--[ 2021.10.05.10.31.51.349.0 ]--
r 40             last
--[ 2021.10.05.10.31.51.714.0 ]--
r 40             last 
--[ 2021.10.05.10.31.52.421.0 ]--
r 40             last =
--[ 2021.10.05.10.31.52.555.0 ]--
r 40             last = 
--[ 2021.10.05.10.31.53.153.0 ]--
r 40             last = i
--[ 2021.10.05.10.31.53.299.0 ]--
r 40             last = it
--[ 2021.10.05.10.31.53.545.0 ]--
r 40             last = ite
--[ 2021.10.05.10.31.53.660.0 ]--
r 40             last = item
--[ 2021.10.05.10.31.54.346.0 ]--
r 40             last = item;
--[ 2021.10.05.10.32.09.211.0 ]--
r 40             last = Nitem;
--[ 2021.10.05.10.32.09.541.0 ]--
r 40             last = Noitem;
--[ 2021.10.05.10.32.10.258.0 ]--
r 40             last = Noditem;
--[ 2021.10.05.10.32.10.465.0 ]--
r 40             last = Nodeitem;
--[ 2021.10.05.10.32.11.605.0 ]--
r 40             last = Node.item;
--[ 2021.10.05.10.32.13.021.0 ]--
r 40             last = Nodeitem;
--[ 2021.10.05.10.32.13.675.0 ]--
r 40             last = Node<item;
--[ 2021.10.05.10.32.14.542.0 ]--
r 40             last = Node<Iitem;
--[ 2021.10.05.10.32.14.760.0 ]--
r 40             last = Node<Ititem;
--[ 2021.10.05.10.32.14.970.0 ]--
r 40             last = Node<Iteitem;
--[ 2021.10.05.10.32.15.112.0 ]--
r 40             last = Node<Itemitem;
--[ 2021.10.05.10.32.16.301.0 ]--
r 40             last = Node<Item>item;
--[ 2021.10.05.10.32.17.181.0 ]--
r 40             last = Node<Item>.item;
--[ 2021.10.05.10.32.21.339.0 ]--
r 40             last = Node<Ite>.item;
--[ 2021.10.05.10.32.21.490.0 ]--
r 40             last = Node<It>.item;
--[ 2021.10.05.10.32.21.640.0 ]--
r 40             last = Node<I>.item;
--[ 2021.10.05.10.32.21.748.0 ]--
r 40             last = Node<>.item;
--[ 2021.10.05.10.32.22.340.0 ]--
r 40             last = Node<i>.item;
--[ 2021.10.05.10.32.22.494.0 ]--
r 40             last = Node<it>.item;
--[ 2021.10.05.10.32.22.684.0 ]--
r 40             last = Node<ite>.item;
--[ 2021.10.05.10.32.22.733.0 ]--
r 40             last = Node<item>.item;
--[ 2021.10.05.10.32.24.963.0 ]--
r 40             last = Node<ite>.item;
--[ 2021.10.05.10.32.25.087.0 ]--
r 40             last = Node<it>.item;
--[ 2021.10.05.10.32.25.206.0 ]--
r 40             last = Node<i>.item;
--[ 2021.10.05.10.32.25.368.0 ]--
r 40             last = Node<>.item;
--[ 2021.10.05.10.32.25.900.0 ]--
r 40             last = Node<I>.item;
--[ 2021.10.05.10.32.26.158.0 ]--
r 40             last = Node<It>.item;
--[ 2021.10.05.10.32.26.290.0 ]--
r 40             last = Node<Ite>.item;
--[ 2021.10.05.10.32.26.376.0 ]--
r 40             last = Node<Item>.item;
--[ 2021.10.05.10.32.31.547.0 ]--
r 40             last = Node<Item.item;
--[ 2021.10.05.10.32.32.052.0 ]--
r 40             last = Node<Ite.item;
--[ 2021.10.05.10.32.32.080.0 ]--
r 40             last = Node<It.item;
--[ 2021.10.05.10.32.32.113.0 ]--
r 40             last = Node<I.item;
--[ 2021.10.05.10.32.32.138.0 ]--
r 40             last = Node<.item;
--[ 2021.10.05.10.32.32.165.0 ]--
r 40             last = Node.item;
--[ 2021.10.05.10.32.47.730.0 ]--
r 40             last = Nodeitem;
--[ 2021.10.05.10.32.47.867.0 ]--
r 40             last = Noditem;
--[ 2021.10.05.10.32.48.003.0 ]--
r 40             last = Noitem;
--[ 2021.10.05.10.32.48.218.0 ]--
r 40             last = Nitem;
--[ 2021.10.05.10.32.48.487.0 ]--
r 40             last = item;
--[ 2021.10.05.10.33.03.990.0 ]--
r 40             
--[ 2021.10.05.10.33.05.214.0 ]--
+ 41         }\
r 42         
--[ 2021.10.05.10.33.06.354.0 ]--
r 42         last = item;
--[ 2021.10.05.10.33.07.368.0 ]--
r 41         }
--[ 2021.10.05.10.33.08.533.0 ]--
- 40
--[ 2021.10.05.10.33.42.458.0 ]--
r 39             first. = item;
--[ 2021.10.05.10.33.42.906.0 ]--
r 39             first.i = item;
--[ 2021.10.05.10.33.43.047.0 ]--
r 39             first.it = item;
--[ 2021.10.05.10.33.44.035.0 ]--
r 39             first.item = item;
--[ 2021.10.05.10.34.04.780.0 ]--
+ 39             
--[ 2021.10.05.10.34.06.740.0 ]--
r 39             f
--[ 2021.10.05.10.34.06.866.0 ]--
r 39             fi
--[ 2021.10.05.10.34.06.959.0 ]--
r 39             fir
--[ 2021.10.05.10.34.07.769.0 ]--
r 39             first
--[ 2021.10.05.10.34.08.237.0 ]--
r 39             first 
--[ 2021.10.05.10.34.08.504.0 ]--
r 39             first =
--[ 2021.10.05.10.34.08.616.0 ]--
r 39             first = 
--[ 2021.10.05.10.34.09.268.0 ]--
r 39             first = n
--[ 2021.10.05.10.34.09.307.0 ]--
r 39             first = ne
--[ 2021.10.05.10.34.09.541.0 ]--
r 39             first = new
--[ 2021.10.05.10.34.09.662.0 ]--
r 39             first = new 
--[ 2021.10.05.10.34.10.182.0 ]--
r 39             first = new N
--[ 2021.10.05.10.34.11.056.0 ]--
r 39             first = new Node
--[ 2021.10.05.10.34.11.063.0 ]--
r 39             first = new Node<>
--[ 2021.10.05.10.34.11.071.0 ]--
r 39             first = new Node<>()
--[ 2021.10.05.10.34.15.181.0 ]--
r 39             first = new Node<>(i)
--[ 2021.10.05.10.34.17.651.0 ]--
r 39             first = new Node<>(item)
--[ 2021.10.05.10.34.17.998.0 ]--
r 39             first = new Node<>(item,)
--[ 2021.10.05.10.34.18.188.0 ]--
r 39             first = new Node<>(item, )
--[ 2021.10.05.10.34.18.400.0 ]--
r 39             first = new Node<>(item, n)
--[ 2021.10.05.10.34.18.573.0 ]--
r 39             first = new Node<>(item, nu)
--[ 2021.10.05.10.34.18.764.0 ]--
r 39             first = new Node<>(item, nul)
--[ 2021.10.05.10.34.18.906.0 ]--
r 39             first = new Node<>(item, null)
--[ 2021.10.05.10.34.22.563.0 ]--
r 39             first = new Node<>(item, nul)
--[ 2021.10.05.10.34.23.069.0 ]--
r 39             first = new Node<>(item, nu)
--[ 2021.10.05.10.34.23.105.0 ]--
r 39             first = new Node<>(item, n)
--[ 2021.10.05.10.34.23.139.0 ]--
r 39             first = new Node<>(item, )
--[ 2021.10.05.10.34.23.187.0 ]--
r 39             first = new Node<>(item,)
--[ 2021.10.05.10.34.23.209.0 ]--
r 39             first = new Node<>(item)
--[ 2021.10.05.10.34.23.239.0 ]--
r 39             first = new Node<>(ite)
--[ 2021.10.05.10.34.23.621.0 ]--
r 39             first = new Node<>(it)
--[ 2021.10.05.10.34.24.243.0 ]--
r 39             first = new Node<>(ite)
--[ 2021.10.05.10.34.24.448.0 ]--
r 39             first = new Node<>(item)
--[ 2021.10.05.10.34.28.901.0 ]--
r 39             first = new Node<>(item);
--[ 2021.10.05.10.34.35.879.0 ]--
r 40             
--[ 2021.10.05.10.34.36.073.0 ]--
- 40
--[ 2021.10.05.10.34.56.982.0 ]--
r 41         
--[ 2021.10.05.10.34.59.059.0 ]--
r 41         l
--[ 2021.10.05.10.34.59.175.0 ]--
r 41         la
--[ 2021.10.05.10.34.59.666.0 ]--
r 41         las
--[ 2021.10.05.10.35.00.520.0 ]--
r 41         last
--[ 2021.10.05.10.35.03.755.0 ]--
r 41         las
--[ 2021.10.05.10.35.03.882.0 ]--
r 41         la
--[ 2021.10.05.10.35.04.026.0 ]--
r 41         l
--[ 2021.10.05.10.35.04.151.0 ]--
r 41         
--[ 2021.10.05.10.35.04.336.0 ]--
r 41         i
--[ 2021.10.05.10.35.04.442.0 ]--
r 41         if
--[ 2021.10.05.10.35.04.489.0 ]--
r 41         if 
--[ 2021.10.05.10.35.05.056.0 ]--
r 41         if l
--[ 2021.10.05.10.35.05.104.0 ]--
r 41         if la
--[ 2021.10.05.10.35.05.478.0 ]--
r 41         if l
--[ 2021.10.05.10.35.05.590.0 ]--
r 41         if 
--[ 2021.10.05.10.35.06.078.0 ]--
r 41         if ()
--[ 2021.10.05.10.35.06.375.0 ]--
r 41         if (l)
--[ 2021.10.05.10.35.06.443.0 ]--
r 41         if (la)
--[ 2021.10.05.10.35.07.025.0 ]--
r 41         if (last)
--[ 2021.10.05.10.35.07.430.0 ]--
r 41         if (last )
--[ 2021.10.05.10.35.07.698.0 ]--
r 41         if (last =)
--[ 2021.10.05.10.35.07.830.0 ]--
r 41         if (last ==)
--[ 2021.10.05.10.35.08.367.0 ]--
r 41         if (last == )
--[ 2021.10.05.10.35.08.555.0 ]--
r 41         if (last == n)
--[ 2021.10.05.10.35.09.385.0 ]--
r 41         if (last == null)
--[ 2021.10.05.10.35.10.221.0 ]--
r 41         if (last == null) 
--[ 2021.10.05.10.35.14.795.0 ]--
r 41         if (last == null) {
--[ 2021.10.05.10.35.14.971.0 ]--
+ 42 
+ 43 }
--[ 2021.10.05.10.35.14.980.0 ]--
r 43         }
--[ 2021.10.05.10.35.15.008.0 ]--
r 42             
--[ 2021.10.05.10.35.17.556.0 ]--
r 42             l
--[ 2021.10.05.10.35.17.622.0 ]--
r 42             la
--[ 2021.10.05.10.35.18.097.0 ]--
r 42             last
--[ 2021.10.05.10.35.18.475.0 ]--
r 42             last 
--[ 2021.10.05.10.35.19.019.0 ]--
r 42             last =
--[ 2021.10.05.10.35.19.152.0 ]--
r 42             last = 
--[ 2021.10.05.10.35.19.483.0 ]--
r 42             last = n
--[ 2021.10.05.10.35.20.203.0 ]--
r 42             last = null
--[ 2021.10.05.10.35.20.728.0 ]--
r 42             last = nul
--[ 2021.10.05.10.35.20.850.0 ]--
r 42             last = nu
--[ 2021.10.05.10.35.20.988.0 ]--
r 42             last = n
--[ 2021.10.05.10.35.21.083.0 ]--
r 42             last = ne
--[ 2021.10.05.10.35.21.670.0 ]--
r 42             last = new
--[ 2021.10.05.10.35.21.677.0 ]--
r 42             last = new 
--[ 2021.10.05.10.35.22.300.0 ]--
r 42             last = new  
--[ 2021.10.05.10.35.22.558.0 ]--
r 42             last = new  N
--[ 2021.10.05.10.35.22.904.0 ]--
r 42             last = new  
--[ 2021.10.05.10.35.23.030.0 ]--
r 42             last = new 
--[ 2021.10.05.10.35.23.395.0 ]--
r 42             last = new N
--[ 2021.10.05.10.35.24.014.0 ]--
r 42             last = new Node
--[ 2021.10.05.10.35.24.020.0 ]--
r 42             last = new Node<>
--[ 2021.10.05.10.35.24.026.0 ]--
r 42             last = new Node<>()
--[ 2021.10.05.10.35.26.458.0 ]--
r 42             last = new Node<>(i)
--[ 2021.10.05.10.35.27.074.0 ]--
r 42             last = new Node<>(item)
--[ 2021.10.05.10.35.29.916.0 ]--
r 42             last = new Node<>(item) 
--[ 2021.10.05.10.35.30.674.0 ]--
r 42             last = new Node<>(item)
--[ 2021.10.05.10.35.30.971.0 ]--
r 42             last = new Node<>(item);
--[ 2021.10.05.10.35.31.940.0 ]--
r 43         } 
--[ 2021.10.05.10.35.32.086.0 ]--
r 43         } e
--[ 2021.10.05.10.35.32.277.0 ]--
r 43         } el
--[ 2021.10.05.10.35.32.760.0 ]--
r 43         } else
--[ 2021.10.05.10.35.32.767.0 ]--
r 43         } else 
--[ 2021.10.05.10.35.33.923.0 ]--
r 43         } else {
--[ 2021.10.05.10.35.34.116.0 ]--
+ 44 
+ 45 }
--[ 2021.10.05.10.35.34.125.0 ]--
r 45         }
--[ 2021.10.05.10.35.34.138.0 ]--
r 44             
--[ 2021.10.05.10.35.34.783.0 ]--
r 44             l
--[ 2021.10.05.10.35.35.377.0 ]--
r 44             last
--[ 2021.10.05.10.35.36.264.0 ]--
r 44             last.
--[ 2021.10.05.10.35.39.445.0 ]--
r 44             last
--[ 2021.10.05.10.36.10.180.0 ]--
r 44             last 
--[ 2021.10.05.10.36.10.250.0 ]--
r 44             last =
--[ 2021.10.05.10.36.10.351.0 ]--
r 44             last = 
--[ 2021.10.05.10.36.14.716.0 ]--
r 44             last = i
--[ 2021.10.05.10.36.14.738.0 ]--
r 44             last = it
--[ 2021.10.05.10.36.15.633.0 ]--
r 44             last = item
--[ 2021.10.05.10.36.16.634.0 ]--
r 44             last = item;
--[ 2021.10.05.10.36.29.105.0 ]--
r 44             last. = item;
--[ 2021.10.05.10.36.30.244.0 ]--
r 44             last.i = item;
--[ 2021.10.05.10.36.30.332.0 ]--
r 44             last.it = item;
--[ 2021.10.05.10.36.30.802.0 ]--
r 44             last.item = item;
--[ 2021.10.05.10.37.30.784.0 ]--
+ 44             
--[ 2021.10.05.10.37.31.519.0 ]--
r 44             i
--[ 2021.10.05.10.37.31.634.0 ]--
r 44             it
--[ 2021.10.05.10.37.32.352.0 ]--
r 44             item
--[ 2021.10.05.10.37.41.938.0 ]--
r 44             ite
--[ 2021.10.05.10.37.42.115.0 ]--
r 44             it
--[ 2021.10.05.10.37.42.410.0 ]--
r 44             i
--[ 2021.10.05.10.37.42.714.0 ]--
r 44             
--[ 2021.10.05.10.37.56.107.0 ]--
r 44             .
--[ 2021.10.05.10.37.56.971.0 ]--
r 44             .n
--[ 2021.10.05.10.37.57.287.0 ]--
r 44             .ne
--[ 2021.10.05.10.37.57.649.0 ]--
r 44             .nex
--[ 2021.10.05.10.37.57.943.0 ]--
r 44             .next
--[ 2021.10.05.10.37.58.095.0 ]--
r 44             .next 
--[ 2021.10.05.10.37.58.695.0 ]--
r 44             .next =
--[ 2021.10.05.10.37.58.850.0 ]--
r 44             .next = 
--[ 2021.10.05.10.37.59.234.0 ]--
r 44             .next = a
--[ 2021.10.05.10.37.59.389.0 ]--
r 44             .next = al
--[ 2021.10.05.10.37.59.723.0 ]--
r 44             .next = als
--[ 2021.10.05.10.38.00.315.0 ]--
r 44             .next = al
--[ 2021.10.05.10.38.00.467.0 ]--
r 44             .next = a
--[ 2021.10.05.10.38.00.577.0 ]--
r 44             .next = 
--[ 2021.10.05.10.38.00.834.0 ]--
r 44             .next = l
--[ 2021.10.05.10.38.00.938.0 ]--
r 44             .next = la
--[ 2021.10.05.10.38.01.601.0 ]--
r 44             .next = last
--[ 2021.10.05.10.38.02.723.0 ]--
r 44             .next = last.
--[ 2021.10.05.10.38.04.060.0 ]--
r 44             .next = last.item
--[ 2021.10.05.10.38.04.615.0 ]--
r 44             .next = last.item;
--[ 2021.10.05.10.38.17.906.0 ]--
+ 40             
--[ 2021.10.05.10.38.18.555.0 ]--
r 40             l
--[ 2021.10.05.10.38.18.665.0 ]--
r 40             la
--[ 2021.10.05.10.38.19.121.0 ]--
r 40             last
--[ 2021.10.05.10.38.19.379.0 ]--
r 40             last 
--[ 2021.10.05.10.38.19.915.0 ]--
r 40             last =
--[ 2021.10.05.10.38.20.020.0 ]--
r 40             last = 
--[ 2021.10.05.10.38.20.162.0 ]--
r 40             last = f
--[ 2021.10.05.10.38.20.712.0 ]--
r 40             last = first
--[ 2021.10.05.10.38.23.290.0 ]--
r 40             last = first;
--[ 2021.10.05.10.38.56.278.0 ]--
- 42
- 42
r 42         
--[ 2021.10.05.10.38.56.667.0 ]--
- 42
--[ 2021.10.05.10.38.59.979.0 ]--
r 42             l.next = last.item;
--[ 2021.10.05.10.39.00.075.0 ]--
r 42             la.next = last.item;
--[ 2021.10.05.10.39.00.576.0 ]--
r 42             last.next = last.item;
--[ 2021.10.05.10.39.03.332.0 ]--
r 42         last.next = last.item;
--[ 2021.10.05.10.39.04.229.0 ]--
r 43         last.item = item;
--[ 2021.10.05.10.39.06.002.0 ]--
r 44         
--[ 2021.10.05.10.39.06.638.0 ]--
- 44
--[ 2021.10.05.10.39.18.185.0 ]--
r 41         } 
--[ 2021.10.05.10.39.18.331.0 ]--
r 41         } e
--[ 2021.10.05.10.39.18.419.0 ]--
r 41         } el
--[ 2021.10.05.10.39.18.996.0 ]--
r 41         } else
--[ 2021.10.05.10.39.19.008.0 ]--
r 41         } else 
--[ 2021.10.05.10.39.19.740.0 ]--
r 41         } else {
--[ 2021.10.05.10.39.20.035.0 ]--
+ 42 
+ 43 }
--[ 2021.10.05.10.39.20.044.0 ]--
r 43         }
--[ 2021.10.05.10.39.20.070.0 ]--
r 42             
--[ 2021.10.05.10.39.24.296.0 ]--
- 44
r 44         
--[ 2021.10.05.10.39.24.573.0 ]--
- 44
--[ 2021.10.05.10.39.24.848.0 ]--
r 43         
--[ 2021.10.05.10.39.25.812.0 ]--
r 43         }
--[ 2021.10.05.10.39.25.833.0 ]--
r 42 
--[ 2021.10.05.10.39.26.867.0 ]--
r 42     
--[ 2021.10.05.10.39.27.175.0 ]--
r 42         
--[ 2021.10.05.10.39.27.508.0 ]--
r 42             
--[ 2021.10.05.10.39.28.170.0 ]--
+ 42             last.next = last.item;
r 43         last.item = item;
--[ 2021.10.05.10.39.28.178.0 ]--
r 43             last.item = item;
--[ 2021.10.05.10.40.53.338.0 ]--
r 42             i.next = last.item;
--[ 2021.10.05.10.40.54.340.0 ]--
r 42             item.next = last.item;
--[ 2021.10.05.10.41.13.457.0 ]--
r 42             item.next = last.ite;
--[ 2021.10.05.10.41.13.566.0 ]--
r 42             item.next = last.it;
--[ 2021.10.05.10.41.13.709.0 ]--
r 42             item.next = last.i;
--[ 2021.10.05.10.41.13.837.0 ]--
r 42             item.next = last.;
--[ 2021.10.05.10.41.14.005.0 ]--
r 42             item.next = last;
--[ 2021.10.05.10.42.08.418.0 ]--
r 42             l.next = last;
--[ 2021.10.05.10.42.08.462.0 ]--
r 42             la.next = last;
--[ 2021.10.05.10.42.09.079.0 ]--
r 42             last.next = last;
--[ 2021.10.05.10.42.12.042.0 ]--
r 42             last.next = i;
--[ 2021.10.05.10.42.12.141.0 ]--
r 42             last.next = it;
--[ 2021.10.05.10.42.12.632.0 ]--
r 42             last.next = item;
--[ 2021.10.05.10.42.22.078.0 ]--
r 43             f = item;
--[ 2021.10.05.10.42.22.202.0 ]--
r 43             fi = item;
--[ 2021.10.05.10.42.22.776.0 ]--
r 43             first = item;
--[ 2021.10.05.10.42.23.137.0 ]--
r 43             first. = item;
--[ 2021.10.05.10.42.23.908.0 ]--
r 43             first.i = item;
--[ 2021.10.05.10.42.25.241.0 ]--
r 43             first. = item;
--[ 2021.10.05.10.42.25.449.0 ]--
r 43             first = item;
--[ 2021.10.05.10.42.25.652.0 ]--
r 43             firs = item;
--[ 2021.10.05.10.42.25.823.0 ]--
r 43             fir = item;
--[ 2021.10.05.10.42.25.988.0 ]--
r 43             fi = item;
--[ 2021.10.05.10.42.26.417.0 ]--
r 43             f = item;
--[ 2021.10.05.10.42.26.819.0 ]--
r 43              = item;
--[ 2021.10.05.10.42.29.777.0 ]--
r 43              = item
--[ 2021.10.05.10.42.29.964.0 ]--
r 43              = ite
--[ 2021.10.05.10.42.30.108.0 ]--
r 43              = it
--[ 2021.10.05.10.42.30.268.0 ]--
r 43              = i
--[ 2021.10.05.10.42.30.409.0 ]--
r 43              = 
--[ 2021.10.05.10.42.30.574.0 ]--
r 43              =
--[ 2021.10.05.10.42.30.855.0 ]--
r 43              
--[ 2021.10.05.10.42.31.143.0 ]--
r 43             
--[ 2021.10.05.10.42.55.820.0 ]--
r 42             last.next = nitem;
--[ 2021.10.05.10.42.56.157.0 ]--
r 42             last.next = newitem;
--[ 2021.10.05.10.43.04.729.0 ]--
r 42             last.next = new item;
--[ 2021.10.05.10.43.05.550.0 ]--
r 42             last.next = new Nitem;
--[ 2021.10.05.10.43.06.437.0 ]--
r 42             last.next = new Nodeitem;
--[ 2021.10.05.10.43.06.447.0 ]--
r 42             last.next = new Node item;
--[ 2021.10.05.10.43.06.453.0 ]--
r 42             last.next = new Node<>item;
--[ 2021.10.05.10.43.06.461.0 ]--
r 42             last.next = new Node<>()item;
--[ 2021.10.05.10.43.07.866.0 ]--
r 42             last.next = new Node<>(i)item;
--[ 2021.10.05.10.43.07.954.0 ]--
r 42             last.next = new Node<>(it)item;
--[ 2021.10.05.10.43.08.478.0 ]--
r 42             last.next = new Node<>(item)item;
--[ 2021.10.05.10.43.09.972.0 ]--
r 42             last.next = new Node<>(item);
--[ 2021.10.05.10.44.33.202.0 ]--
r 43             l
--[ 2021.10.05.10.44.33.326.0 ]--
r 43             la
--[ 2021.10.05.10.44.33.417.0 ]--
r 43             las
--[ 2021.10.05.10.44.33.743.0 ]--
r 43             last
--[ 2021.10.05.10.44.33.777.0 ]--
r 43             last 
--[ 2021.10.05.10.44.34.802.0 ]--
r 43             last =
--[ 2021.10.05.10.44.34.958.0 ]--
r 43             last = 
--[ 2021.10.05.10.44.35.121.0 ]--
r 43             last = l
--[ 2021.10.05.10.44.35.664.0 ]--
r 43             last = last
--[ 2021.10.05.10.44.35.868.0 ]--
r 43             last = last.
--[ 2021.10.05.10.44.36.828.0 ]--
r 43             last = last.next
--[ 2021.10.05.10.44.37.226.0 ]--
r 43             last = last.next;
--[ 2021.10.05.10.45.57.185.0 ]--
r 49     
--[ 2021.10.05.10.45.57.777.0 ]--
r 49         
--[ 2021.10.05.10.46.08.876.0 ]--
r 49         fi
--[ 2021.10.05.10.46.09.080.0 ]--
r 49         fi 
--[ 2021.10.05.10.46.09.583.0 ]--
r 49         fi
--[ 2021.10.05.10.46.09.710.0 ]--
r 49         f
--[ 2021.10.05.10.46.09.829.0 ]--
r 49         
--[ 2021.10.05.10.46.09.979.0 ]--
r 49         i
--[ 2021.10.05.10.46.10.080.0 ]--
r 49         if
--[ 2021.10.05.10.46.10.161.0 ]--
r 49         if 
--[ 2021.10.05.10.46.11.257.0 ]--
r 49         if ()
--[ 2021.10.05.10.46.12.024.0 ]--
r 49         if (i)
--[ 2021.10.05.10.46.12.185.0 ]--
r 49         if (is)
--[ 2021.10.05.10.46.12.649.0 ]--
r 49         if (isEmpty)
--[ 2021.10.05.10.46.12.664.0 ]--
r 49         if (isEmpty())
--[ 2021.10.05.10.46.14.622.0 ]--
r 49         if (isEmpty()) 
--[ 2021.10.05.10.46.15.058.0 ]--
r 49         if (isEmpty()) {
--[ 2021.10.05.10.46.15.262.0 ]--
+ 50 
+ 51 }
--[ 2021.10.05.10.46.15.287.0 ]--
r 51         }
--[ 2021.10.05.10.46.15.317.0 ]--
r 50             
--[ 2021.10.05.10.46.17.266.0 ]--
r 50             f
--[ 2021.10.05.10.46.17.400.0 ]--
r 50             fi
--[ 2021.10.05.10.46.17.465.0 ]--
r 50             fir
--[ 2021.10.05.10.46.17.950.0 ]--
r 50             firs
--[ 2021.10.05.10.46.18.187.0 ]--
r 50             firs 
--[ 2021.10.05.10.46.18.623.0 ]--
r 50             firs -
--[ 2021.10.05.10.46.18.761.0 ]--
r 50             firs - 
--[ 2021.10.05.10.46.19.235.0 ]--
r 50             firs -
--[ 2021.10.05.10.46.19.374.0 ]--
r 50             firs 
--[ 2021.10.05.10.46.19.504.0 ]--
r 50             firs
--[ 2021.10.05.10.46.19.651.0 ]--
r 50             fir
--[ 2021.10.05.10.46.19.787.0 ]--
r 50             fi
--[ 2021.10.05.10.46.19.923.0 ]--
r 50             f
--[ 2021.10.05.10.46.20.076.0 ]--
r 50             
--[ 2021.10.05.10.46.25.248.0 ]--
+ 50             first = new Node<>(item);
+ 51             last = first;
+ 52         } else {
+ 53             last.next = new Node<>(item);
r 54             last = last.next;
--[ 2021.10.05.10.46.29.250.0 ]--
- 53
r 53             
--[ 2021.10.05.10.46.42.714.0 ]--
r 53             f
--[ 2021.10.05.10.46.42.846.0 ]--
r 53             fi
--[ 2021.10.05.10.46.43.348.0 ]--
r 53             first
--[ 2021.10.05.10.46.44.006.0 ]--
r 53             first 
--[ 2021.10.05.10.46.44.124.0 ]--
r 53             first =
--[ 2021.10.05.10.46.44.234.0 ]--
r 53             first = 
--[ 2021.10.05.10.46.45.554.0 ]--
r 53             first = n
--[ 2021.10.05.10.46.45.618.0 ]--
r 53             first = ne
--[ 2021.10.05.10.46.46.440.0 ]--
r 53             first = new
--[ 2021.10.05.10.46.46.447.0 ]--
r 53             first = new 
--[ 2021.10.05.10.46.47.242.0 ]--
r 53             first = new N
--[ 2021.10.05.10.46.47.497.0 ]--
r 53             first = new No
--[ 2021.10.05.10.46.47.941.0 ]--
r 53             first = new Node
--[ 2021.10.05.10.46.47.946.0 ]--
r 53             first = new Node<>
--[ 2021.10.05.10.46.47.952.0 ]--
r 53             first = new Node<>()
--[ 2021.10.05.10.46.48.792.0 ]--
r 53             first = new Node<>(i)
--[ 2021.10.05.10.46.49.271.0 ]--
r 53             first = new Node<>(item)
--[ 2021.10.05.10.46.50.810.0 ]--
r 53             first = new Node<>(item);
--[ 2021.10.05.10.47.00.357.0 ]--
+ 53             
--[ 2021.10.05.10.47.13.185.0 ]--
r 53             t
--[ 2021.10.05.10.47.13.344.0 ]--
r 53             tm
--[ 2021.10.05.10.47.13.393.0 ]--
r 53             tmp
--[ 2021.10.05.10.47.13.877.0 ]--
r 53             tmp 
--[ 2021.10.05.10.47.14.323.0 ]--
r 53             tmp =
--[ 2021.10.05.10.47.14.429.0 ]--
r 53             tmp = 
--[ 2021.10.05.10.47.14.875.0 ]--
r 53             tmp = n
--[ 2021.10.05.10.47.15.853.0 ]--
r 53             tmp = 
--[ 2021.10.05.10.47.15.993.0 ]--
r 53             tmp =
--[ 2021.10.05.10.47.16.136.0 ]--
r 53             tmp 
--[ 2021.10.05.10.47.16.305.0 ]--
r 53             tmp
--[ 2021.10.05.10.47.16.452.0 ]--
r 53             tm
--[ 2021.10.05.10.47.16.595.0 ]--
r 53             t
--[ 2021.10.05.10.47.16.827.0 ]--
r 53             
--[ 2021.10.05.10.47.17.482.0 ]--
r 53             N
--[ 2021.10.05.10.47.17.688.0 ]--
r 53             No
--[ 2021.10.05.10.47.18.717.0 ]--
r 53             Nod
--[ 2021.10.05.10.47.18.966.0 ]--
r 53             Node
--[ 2021.10.05.10.47.21.079.0 ]--
r 53             Node<>
--[ 2021.10.05.10.47.21.733.0 ]--
r 53             Node<I>
--[ 2021.10.05.10.47.22.153.0 ]--
r 53             Node<It>
--[ 2021.10.05.10.47.22.515.0 ]--
r 53             Node<Item>
--[ 2021.10.05.10.47.23.682.0 ]--
r 53             Node<Item> 
--[ 2021.10.05.10.47.24.065.0 ]--
r 53             Node<Item> t
--[ 2021.10.05.10.47.25.112.0 ]--
r 53             Node<Item> tm
--[ 2021.10.05.10.47.25.235.0 ]--
r 53             Node<Item> tmp
--[ 2021.10.05.10.47.25.442.0 ]--
r 53             Node<Item> tmp 
--[ 2021.10.05.10.47.26.065.0 ]--
r 53             Node<Item> tmp =
--[ 2021.10.05.10.47.26.189.0 ]--
r 53             Node<Item> tmp = 
--[ 2021.10.05.10.47.26.677.0 ]--
r 53             Node<Item> tmp = n
--[ 2021.10.05.10.47.26.908.0 ]--
r 53             Node<Item> tmp = ne
--[ 2021.10.05.10.47.27.301.0 ]--
r 53             Node<Item> tmp = new
--[ 2021.10.05.10.47.27.320.0 ]--
r 53             Node<Item> tmp = new 
--[ 2021.10.05.10.47.27.549.0 ]--
r 53             Node<Item> tmp = new  
--[ 2021.10.05.10.47.28.116.0 ]--
r 53             Node<Item> tmp = new 
--[ 2021.10.05.10.47.28.405.0 ]--
r 53             Node<Item> tmp = new N
--[ 2021.10.05.10.47.28.600.0 ]--
r 53             Node<Item> tmp = new No
--[ 2021.10.05.10.47.29.000.0 ]--
r 53             Node<Item> tmp = new Node
--[ 2021.10.05.10.47.29.014.0 ]--
r 53             Node<Item> tmp = new Node<>
--[ 2021.10.05.10.47.29.033.0 ]--
r 53             Node<Item> tmp = new Node<>()
--[ 2021.10.05.10.47.29.682.0 ]--
r 53             Node<Item> tmp = new Node<>(i)
--[ 2021.10.05.10.47.30.296.0 ]--
r 53             Node<Item> tmp = new Node<>(item)
--[ 2021.10.05.10.47.31.714.0 ]--
r 53             Node<Item> tmp = new Node<>(item);
--[ 2021.10.05.10.47.40.393.0 ]--
r 54             first = t;
--[ 2021.10.05.10.47.40.477.0 ]--
r 54             first = tm;
--[ 2021.10.05.10.47.40.564.0 ]--
r 54             first = tmp;
--[ 2021.10.05.10.47.42.223.0 ]--
+ 54             
--[ 2021.10.05.10.47.58.426.0 ]--
r 54             t
--[ 2021.10.05.10.47.58.565.0 ]--
r 54             tm
--[ 2021.10.05.10.47.58.700.0 ]--
r 54             tmp
--[ 2021.10.05.10.47.58.861.0 ]--
r 54             tmp.
--[ 2021.10.05.10.47.59.212.0 ]--
r 54             tmp. 
--[ 2021.10.05.10.47.59.505.0 ]--
r 54             tmp.
--[ 2021.10.05.10.48.00.024.0 ]--
r 54             tmp.n
--[ 2021.10.05.10.48.00.136.0 ]--
r 54             tmp.ne
--[ 2021.10.05.10.48.00.533.0 ]--
r 54             tmp.next
--[ 2021.10.05.10.48.01.126.0 ]--
r 54             tmp.next 
--[ 2021.10.05.10.48.01.290.0 ]--
r 54             tmp.next =
--[ 2021.10.05.10.48.01.416.0 ]--
r 54             tmp.next = 
--[ 2021.10.05.10.48.02.914.0 ]--
r 54             tmp.next = f
--[ 2021.10.05.10.48.03.510.0 ]--
r 54             tmp.next = first
--[ 2021.10.05.10.48.04.004.0 ]--
r 54             tmp.next = first;
--[ 2021.10.05.10.49.46.104.0 ]--
+ 61         
--[ 2021.10.05.10.49.48.977.0 ]--
r 61         i
--[ 2021.10.05.10.49.49.084.0 ]--
r 61         if
--[ 2021.10.05.10.49.49.142.0 ]--
r 61         if 
--[ 2021.10.05.10.49.49.820.0 ]--
r 61         if I
--[ 2021.10.05.10.49.50.308.0 ]--
r 61         if 
--[ 2021.10.05.10.49.50.722.0 ]--
r 61         if ()
--[ 2021.10.05.10.49.50.978.0 ]--
r 61         if (i)
--[ 2021.10.05.10.49.51.499.0 ]--
r 61         if (isEmpty)
--[ 2021.10.05.10.49.51.504.0 ]--
r 61         if (isEmpty())
--[ 2021.10.05.10.49.52.522.0 ]--
r 61         if (isEmpty()) 
--[ 2021.10.05.10.49.52.848.0 ]--
r 61         if (isEmpty()) {
--[ 2021.10.05.10.49.54.288.0 ]--
+ 63         
--[ 2021.10.05.10.49.55.082.0 ]--
r 63         }
--[ 2021.10.05.10.49.55.106.0 ]--
r 62             return null;
--[ 2021.10.05.10.49.59.874.0 ]--
r 63         } 
--[ 2021.10.05.10.49.59.998.0 ]--
r 63         } e
--[ 2021.10.05.10.50.00.726.0 ]--
r 63         } else
--[ 2021.10.05.10.50.00.744.0 ]--
r 63         } else 
--[ 2021.10.05.10.50.01.537.0 ]--
r 63         } else {
--[ 2021.10.05.10.50.01.796.0 ]--
+ 64 
+ 65 }
--[ 2021.10.05.10.50.01.846.0 ]--
r 65         }
--[ 2021.10.05.10.50.01.860.0 ]--
r 64             
--[ 2021.10.05.10.50.03.754.0 ]--
r 64             r
--[ 2021.10.05.10.50.03.936.0 ]--
r 64             re
--[ 2021.10.05.10.50.04.083.0 ]--
r 64             reu
--[ 2021.10.05.10.50.04.140.0 ]--
r 64             reut
--[ 2021.10.05.10.50.04.259.0 ]--
r 64             reutn
--[ 2021.10.05.10.50.04.306.0 ]--
r 64             reutnr
--[ 2021.10.05.10.50.04.657.0 ]--
r 64             reutn
--[ 2021.10.05.10.50.04.777.0 ]--
r 64             reut
--[ 2021.10.05.10.50.04.923.0 ]--
r 64             reu
--[ 2021.10.05.10.50.05.051.0 ]--
r 64             re
--[ 2021.10.05.10.50.05.174.0 ]--
r 64             ret
--[ 2021.10.05.10.50.05.259.0 ]--
r 64             retu
--[ 2021.10.05.10.50.05.397.0 ]--
r 64             retur
--[ 2021.10.05.10.50.05.474.0 ]--
r 64             return
--[ 2021.10.05.10.50.06.164.0 ]--
r 64             retur
--[ 2021.10.05.10.50.06.274.0 ]--
r 64             retu
--[ 2021.10.05.10.50.06.419.0 ]--
r 64             ret
--[ 2021.10.05.10.50.06.553.0 ]--
r 64             re
--[ 2021.10.05.10.50.06.696.0 ]--
r 64             r
--[ 2021.10.05.10.50.06.884.0 ]--
r 64             
--[ 2021.10.05.10.50.10.602.0 ]--
r 64             r
--[ 2021.10.05.10.50.10.702.0 ]--
r 64             re
--[ 2021.10.05.10.50.10.905.0 ]--
r 64             reut
--[ 2021.10.05.10.50.11.066.0 ]--
r 64             reutr
--[ 2021.10.05.10.50.11.192.0 ]--
r 64             reutrn
--[ 2021.10.05.10.50.11.332.0 ]--
r 64             reutrn 
--[ 2021.10.05.10.50.11.596.0 ]--
r 64             reutrn
--[ 2021.10.05.10.50.11.723.0 ]--
r 64             reutr
--[ 2021.10.05.10.50.11.859.0 ]--
r 64             reut
--[ 2021.10.05.10.50.12.011.0 ]--
r 64             reu
--[ 2021.10.05.10.50.12.145.0 ]--
r 64             reut
--[ 2021.10.05.10.50.12.291.0 ]--
r 64             reutu
--[ 2021.10.05.10.50.12.515.0 ]--
r 64             reut
--[ 2021.10.05.10.50.12.643.0 ]--
r 64             reu
--[ 2021.10.05.10.50.12.787.0 ]--
r 64             re
--[ 2021.10.05.10.50.12.979.0 ]--
r 64             ret
--[ 2021.10.05.10.50.13.071.0 ]--
r 64             retu
--[ 2021.10.05.10.50.13.171.0 ]--
r 64             retur
--[ 2021.10.05.10.50.13.277.0 ]--
r 64             return
--[ 2021.10.05.10.50.13.361.0 ]--
r 64             return 
--[ 2021.10.05.10.50.13.596.0 ]--
r 64             return f
--[ 2021.10.05.10.50.13.709.0 ]--
r 64             return fi
--[ 2021.10.05.10.50.14.624.0 ]--
r 64             return first
--[ 2021.10.05.10.50.15.614.0 ]--
r 64             return first;
--[ 2021.10.05.10.50.17.047.0 ]--
+ 64             
--[ 2021.10.05.10.50.28.130.0 ]--
r 64             I
--[ 2021.10.05.10.50.28.294.0 ]--
r 64             It
--[ 2021.10.05.10.50.28.478.0 ]--
r 64             Ite
--[ 2021.10.05.10.50.28.546.0 ]--
r 64             Item
--[ 2021.10.05.10.50.28.888.0 ]--
r 64             Item.
--[ 2021.10.05.10.50.29.060.0 ]--
r 64             Item. 
--[ 2021.10.05.10.50.29.496.0 ]--
r 64             Item.
--[ 2021.10.05.10.50.29.636.0 ]--
r 64             Item
--[ 2021.10.05.10.50.29.814.0 ]--
r 64             Item 
--[ 2021.10.05.10.50.31.097.0 ]--
r 64             Item t
--[ 2021.10.05.10.50.31.238.0 ]--
r 64             Item tm
--[ 2021.10.05.10.50.31.404.0 ]--
r 64             Item tmp
--[ 2021.10.05.10.50.32.125.0 ]--
r 64             Item tmp 
--[ 2021.10.05.10.50.32.268.0 ]--
r 64             Item tmp =
--[ 2021.10.05.10.50.32.361.0 ]--
r 64             Item tmp = 
--[ 2021.10.05.10.50.33.034.0 ]--
r 64             Item tmp = f
--[ 2021.10.05.10.50.33.109.0 ]--
r 64             Item tmp = fi
--[ 2021.10.05.10.50.33.507.0 ]--
r 64             Item tmp = first
--[ 2021.10.05.10.50.33.708.0 ]--
r 64             Item tmp = first.
--[ 2021.10.05.10.50.34.319.0 ]--
r 64             Item tmp = first.item
--[ 2021.10.05.10.50.35.307.0 ]--
r 64             Item tmp = first.item;
--[ 2021.10.05.10.50.36.194.0 ]--
+ 66             
--[ 2021.10.05.10.50.36.941.0 ]--
- 66
--[ 2021.10.05.10.50.38.653.0 ]--
+ 65             
--[ 2021.10.05.10.50.39.233.0 ]--
r 65             f
--[ 2021.10.05.10.50.40.166.0 ]--
r 65             first
--[ 2021.10.05.10.50.40.625.0 ]--
r 65             first 
--[ 2021.10.05.10.50.40.833.0 ]--
r 65             first =
--[ 2021.10.05.10.50.40.945.0 ]--
r 65             first = 
--[ 2021.10.05.10.50.41.481.0 ]--
r 65             first = f
--[ 2021.10.05.10.50.41.924.0 ]--
r 65             first = first
--[ 2021.10.05.10.50.42.140.0 ]--
r 65             first = first.
--[ 2021.10.05.10.50.42.762.0 ]--
r 65             first = first
--[ 2021.10.05.10.50.42.944.0 ]--
r 65             first = firs
--[ 2021.10.05.10.50.43.179.0 ]--
r 65             first = fir
--[ 2021.10.05.10.50.43.331.0 ]--
r 65             first = fi
--[ 2021.10.05.10.50.43.488.0 ]--
r 65             first = f
--[ 2021.10.05.10.50.43.643.0 ]--
r 65             first = 
--[ 2021.10.05.10.50.44.849.0 ]--
r 65             first = f
--[ 2021.10.05.10.50.45.342.0 ]--
r 65             first = first
--[ 2021.10.05.10.50.45.578.0 ]--
r 65             first = first.
--[ 2021.10.05.10.50.46.602.0 ]--
r 65             first = first.n
--[ 2021.10.05.10.50.46.908.0 ]--
r 65             first = first.next
--[ 2021.10.05.10.50.51.408.0 ]--
r 65             first = first.next;
--[ 2021.10.05.10.50.52.616.0 ]--
r 66             return firs;
--[ 2021.10.05.10.50.52.746.0 ]--
r 66             return fir;
--[ 2021.10.05.10.50.52.899.0 ]--
r 66             return fi;
--[ 2021.10.05.10.50.53.041.0 ]--
r 66             return f;
--[ 2021.10.05.10.50.53.521.0 ]--
r 66             return ;
--[ 2021.10.05.10.50.53.619.0 ]--
r 66             return t;
--[ 2021.10.05.10.50.54.206.0 ]--
r 66             return tmp;
--[ 2021.10.05.10.52.15.661.0 ]--
r 62             t
--[ 2021.10.05.10.52.15.803.0 ]--
r 62             th
--[ 2021.10.05.10.52.16.155.0 ]--
r 62             thr
--[ 2021.10.05.10.52.17.371.0 ]--
r 62             thro
--[ 2021.10.05.10.52.17.737.0 ]--
r 62             thro.
--[ 2021.10.05.10.52.18.197.0 ]--
r 62             thro
--[ 2021.10.05.10.52.18.311.0 ]--
r 62             throw
--[ 2021.10.05.10.52.18.443.0 ]--
r 62             throw.
--[ 2021.10.05.10.52.19.388.0 ]--
r 62             throw.n
--[ 2021.10.05.10.52.19.544.0 ]--
r 62             throw.ne
--[ 2021.10.05.10.52.19.946.0 ]--
r 62             throw.n
--[ 2021.10.05.10.52.20.074.0 ]--
r 62             throw.
--[ 2021.10.05.10.52.21.951.0 ]--
r 62             throw.NoSuchElementException
--[ 2021.10.05.10.52.24.720.0 ]--
r 62             throwNoSuchElementException
--[ 2021.10.05.10.52.25.137.0 ]--
r 62             throw(NoSuchElementException
--[ 2021.10.05.10.52.26.017.0 ]--
r 62             throwNoSuchElementException
--[ 2021.10.05.10.52.26.212.0 ]--
r 62             throw NoSuchElementException
--[ 2021.10.05.10.52.28.490.0 ]--
r 62             throw NoSuchElementException()
--[ 2021.10.05.10.52.29.875.0 ]--
r 62             throw NoSuchElementException();
--[ 2021.10.05.10.52.33.312.0 ]--
r 62             throw nNoSuchElementException();
--[ 2021.10.05.10.52.33.551.0 ]--
r 62             throw neNoSuchElementException();
--[ 2021.10.05.10.52.33.729.0 ]--
r 62             throw newNoSuchElementException();
--[ 2021.10.05.10.52.33.788.0 ]--
r 62             throw new NoSuchElementException();
--[ 2021.10.05.10.52.35.660.0 ]--
r 62             throw new NoSuchElementExceptionNoSuchElementException();
--[ 2021.10.05.10.52.35.669.0 ]--
r 62             throw new NoSuchElementException NoSuchElementException();
--[ 2021.10.05.10.52.35.678.0 ]--
r 62             throw new NoSuchElementExceptionNoSuchElementException();
--[ 2021.10.05.10.52.35.683.0 ]--
r 62             throw new NoSuchElementException()NoSuchElementException();
--[ 2021.10.05.10.52.38.539.0 ]--
r 62             throw new NoSuchElementException()
--[ 2021.10.05.10.52.38.778.0 ]--
r 62             throw new NoSuchElementException();
--[ 2021.10.05.10.52.40.100.0 ]--
r 62             throw new NoSuchElementException("");
--[ 2021.10.05.10.52.41.912.0 ]--
r 62             throw new NoSuchElementException("p");
--[ 2021.10.05.10.52.42.080.0 ]--
r 62             throw new NoSuchElementException("po");
--[ 2021.10.05.10.52.42.311.0 ]--
r 62             throw new NoSuchElementException("pop");
--[ 2021.10.05.10.52.42.555.0 ]--
r 62             throw new NoSuchElementException("pop ");
--[ 2021.10.05.10.52.42.712.0 ]--
r 62             throw new NoSuchElementException("pop o");
--[ 2021.10.05.10.52.42.792.0 ]--
r 62             throw new NoSuchElementException("pop on");
--[ 2021.10.05.10.52.42.856.0 ]--
r 62             throw new NoSuchElementException("pop on ");
--[ 2021.10.05.10.52.43.008.0 ]--
r 62             throw new NoSuchElementException("pop on e");
--[ 2021.10.05.10.52.43.139.0 ]--
r 62             throw new NoSuchElementException("pop on em");
--[ 2021.10.05.10.52.43.392.0 ]--
r 62             throw new NoSuchElementException("pop on emp");
--[ 2021.10.05.10.52.43.525.0 ]--
r 62             throw new NoSuchElementException("pop on empt");
--[ 2021.10.05.10.52.43.626.0 ]--
r 62             throw new NoSuchElementException("pop on empty");
--[ 2021.10.05.10.52.43.777.0 ]--
r 62             throw new NoSuchElementException("pop on empty ");
--[ 2021.10.05.10.52.44.289.0 ]--
r 62             throw new NoSuchElementException("pop on empty s");
--[ 2021.10.05.10.52.45.048.0 ]--
r 62             throw new NoSuchElementException("pop on empty st");
--[ 2021.10.05.10.52.46.113.0 ]--
r 62             throw new NoSuchElementException("pop on empty ste");
--[ 2021.10.05.10.52.46.679.0 ]--
r 62             throw new NoSuchElementException("pop on empty steq");
--[ 2021.10.05.10.52.46.788.0 ]--
r 62             throw new NoSuchElementException("pop on empty stequ");
--[ 2021.10.05.10.52.47.366.0 ]--
r 62             throw new NoSuchElementException("pop on empty steque");
--[ 2021.10.05.10.52.50.336.0 ]--
r 62             throw new NoSuchElementException("pop on empty steque\");
--[ 2021.10.05.10.52.51.266.0 ]--
r 62             throw new NoSuchElementException("pop on empty steque\n");
--[ 2021.10.05.10.58.44.361.0 ]--
r 62             throw new NoSuchElementException("pop  on empty steque\n");
--[ 2021.10.05.10.58.44.464.0 ]--
r 62             throw new NoSuchElementException("pop c on empty steque\n");
--[ 2021.10.05.10.58.44.768.0 ]--
r 62             throw new NoSuchElementException("pop ca on empty steque\n");
--[ 2021.10.05.10.58.44.880.0 ]--
r 62             throw new NoSuchElementException("pop cal on empty steque\n");
--[ 2021.10.05.10.58.45.016.0 ]--
r 62             throw new NoSuchElementException("pop call on empty steque\n");
--[ 2021.10.05.10.58.45.153.0 ]--
r 62             throw new NoSuchElementException("pop calle on empty steque\n");
--[ 2021.10.05.10.58.45.427.0 ]--
r 62             throw new NoSuchElementException("pop called on empty steque\n");
--[ 2021.10.05.10.58.45.619.0 ]--
r 62             throw new NoSuchElementException("pop called  on empty steque\n");
--[ 2021.10.05.10.58.46.208.0 ]--
r 62             throw new NoSuchElementException("pop called on empty steque\n");
--[ 2021.10.05.10.59.04.727.0 ]--
+ 73         
--[ 2021.10.05.10.59.23.426.0 ]--
r 73         p
--[ 2021.10.05.10.59.23.717.0 ]--
r 73         pur
--[ 2021.10.05.10.59.24.128.0 ]--
r 73         pu
--[ 2021.10.05.10.59.24.220.0 ]--
r 73         pub
--[ 2021.10.05.10.59.24.329.0 ]--
r 73         publ
--[ 2021.10.05.10.59.24.477.0 ]--
r 73         publi
--[ 2021.10.05.10.59.24.561.0 ]--
r 73         public
--[ 2021.10.05.10.59.25.119.0 ]--
r 73         public 
--[ 2021.10.05.10.59.25.489.0 ]--
r 73         public r
--[ 2021.10.05.10.59.25.599.0 ]--
r 73         public re
--[ 2021.10.05.10.59.25.770.0 ]--
r 73         public rem
--[ 2021.10.05.10.59.26.336.0 ]--
r 73         public remo
--[ 2021.10.05.10.59.26.386.0 ]--
r 73         public remov
--[ 2021.10.05.10.59.26.562.0 ]--
r 73         public remove
--[ 2021.10.05.10.59.27.078.0 ]--
r 73         public remove()
--[ 2021.10.05.10.59.29.844.0 ]--
r 73         public remove(){
--[ 2021.10.05.10.59.30.895.0 ]--
r 73         public remove(){}
--[ 2021.10.05.10.59.31.714.0 ]--
r 73         public remove() {}
--[ 2021.10.05.10.59.41.034.0 ]--
r 73         public remove(){}
--[ 2021.10.05.10.59.41.717.0 ]--
r 73         public remove()
--[ 2021.10.05.10.59.42.286.0 ]--
r 73         pu
--[ 2021.10.05.10.59.42.535.0 ]--
r 73         pur
--[ 2021.10.05.10.59.42.826.0 ]--
r 73         
--[ 2021.10.05.10.59.43.156.0 ]--
- 73
--[ 2021.10.05.11.00.44.576.0 ]--
r 73         return n;
--[ 2021.10.05.11.00.44.767.0 ]--
r 73         return ne;
--[ 2021.10.05.11.00.44.931.0 ]--
r 73         return new;
--[ 2021.10.05.11.00.45.521.0 ]--
r 73         return new ;
--[ 2021.10.05.11.00.45.790.0 ]--
r 73         return new I;
--[ 2021.10.05.11.00.45.884.0 ]--
r 73         return new It;
--[ 2021.10.05.11.00.46.544.0 ]--
r 73         return new Iterator;
--[ 2021.10.05.11.00.46.563.0 ]--
r 73         return new Iterator<Item>;
--[ 2021.10.05.11.00.46.569.0 ]--
r 73         return new Iterator<Item>() {};
--[ 2021.10.05.11.00.46.583.0 ]--
+ 73         return new Iterator<Item>() {
r 74         };
--[ 2021.10.05.11.00.46.770.0 ]--
+ 74         @Override
+ 75             public boolean hasNext() {
+ 76                 return false;
r 77             }};
--[ 2021.10.05.11.00.46.783.0 ]--
+ 77             }@Override
+ 78             public Item next() {
+ 79                 return null;
--[ 2021.10.05.11.00.46.799.0 ]--
r 74             @Override
+ 77             }
+ 78 
r 79             @Override
+ 82             }
r 83         };
--[ 2021.10.05.11.00.58.289.0 ]--
+ 83             
--[ 2021.10.05.11.00.59.391.0 ]--
+ 83             
--[ 2021.10.05.11.01.01.297.0 ]--
r 84             @
--[ 2021.10.05.11.01.02.143.0 ]--
r 84             @Override
--[ 2021.10.05.11.01.02.920.0 ]--
+ 85             
--[ 2021.10.05.11.01.03.225.0 ]--
r 85             p
--[ 2021.10.05.11.01.03.312.0 ]--
r 85             pu
--[ 2021.10.05.11.01.03.773.0 ]--
r 85             public
--[ 2021.10.05.11.01.03.780.0 ]--
r 85             public 
--[ 2021.10.05.11.01.04.468.0 ]--
r 85             public v
--[ 2021.10.05.11.01.04.909.0 ]--
r 85             public void
--[ 2021.10.05.11.01.04.923.0 ]--
r 85             public void 
--[ 2021.10.05.11.01.05.652.0 ]--
r 85             public void n
--[ 2021.10.05.11.01.06.073.0 ]--
r 85             public void 
--[ 2021.10.05.11.01.06.150.0 ]--
r 85             public void r
--[ 2021.10.05.11.01.06.344.0 ]--
r 85             public void re
--[ 2021.10.05.11.01.06.548.0 ]--
r 85             public void rem
--[ 2021.10.05.11.01.06.665.0 ]--
r 85             public void remo
--[ 2021.10.05.11.01.06.931.0 ]--
r 85             public void remov
--[ 2021.10.05.11.01.07.131.0 ]--
r 85             public void remove
--[ 2021.10.05.11.01.07.747.0 ]--
r 85             public void remove()
--[ 2021.10.05.11.01.08.888.0 ]--
r 85             public void remove() 
--[ 2021.10.05.11.01.09.427.0 ]--
r 85             public void remove() {}
--[ 2021.10.05.11.01.15.894.0 ]--
r 84             @Overrid
--[ 2021.10.05.11.01.16.037.0 ]--
r 84             @Overri
--[ 2021.10.05.11.01.16.157.0 ]--
r 84             @Overr
--[ 2021.10.05.11.01.16.669.0 ]--
r 84             @Over
--[ 2021.10.05.11.01.16.695.0 ]--
r 84             @Ove
--[ 2021.10.05.11.01.16.724.0 ]--
r 84             @Ov
--[ 2021.10.05.11.01.16.746.0 ]--
r 84             @O
--[ 2021.10.05.11.01.16.777.0 ]--
r 84             @
--[ 2021.10.05.11.01.16.804.0 ]--
r 84             
--[ 2021.10.05.11.01.16.843.0 ]--
- 83
--[ 2021.10.05.11.01.16.874.0 ]--
- 83
--[ 2021.10.05.11.01.16.897.0 ]--
r 82             
--[ 2021.10.05.11.01.17.209.0 ]--
- 82
--[ 2021.10.05.11.01.18.440.0 ]--
+ 82             }
+ 83             
+ 84             @Override
--[ 2021.10.05.11.01.18.969.0 ]--
r 84             @Overrid
--[ 2021.10.05.11.01.19.160.0 ]--
r 84             @Overri
--[ 2021.10.05.11.01.19.309.0 ]--
r 84             @Overr
--[ 2021.10.05.11.01.20.033.0 ]--
r 84             @Override
--[ 2021.10.05.11.01.21.037.0 ]--
r 84 //            @Override
--[ 2021.10.05.11.01.26.591.0 ]--
r 84 
--[ 2021.10.05.11.01.26.932.0 ]--
- 84
--[ 2021.10.05.11.03.16.923.0 ]--
+ 74             
--[ 2021.10.05.11.03.18.158.0 ]--
r 74             N
--[ 2021.10.05.11.03.18.909.0 ]--
r 74             Node
--[ 2021.10.05.11.03.20.272.0 ]--
r 74             Node<>
--[ 2021.10.05.11.03.20.990.0 ]--
r 74             Node<I>
--[ 2021.10.05.11.03.21.721.0 ]--
r 74             Node<Item>
--[ 2021.10.05.11.03.22.817.0 ]--
r 74             Node<Item> 
--[ 2021.10.05.11.03.27.111.0 ]--
r 74             Node<Item> f
--[ 2021.10.05.11.03.27.481.0 ]--
r 74             Node<Item> f 
--[ 2021.10.05.11.03.28.194.0 ]--
r 74             Node<Item> f =
--[ 2021.10.05.11.03.28.364.0 ]--
r 74             Node<Item> f = 
--[ 2021.10.05.11.03.28.538.0 ]--
r 74             Node<Item> f = f
--[ 2021.10.05.11.03.29.475.0 ]--
r 74             Node<Item> f = fr
--[ 2021.10.05.11.03.30.219.0 ]--
r 74             Node<Item> f = f
--[ 2021.10.05.11.03.30.405.0 ]--
r 74             Node<Item> f = 
--[ 2021.10.05.11.03.32.024.0 ]--
r 74             Node<Item> f =
--[ 2021.10.05.11.03.32.259.0 ]--
r 74             Node<Item> f 
--[ 2021.10.05.11.03.32.453.0 ]--
r 74             Node<Item> f
--[ 2021.10.05.11.03.33.576.0 ]--
r 74             Node<Item> f;
--[ 2021.10.05.11.03.44.615.0 ]--
r 74             Node<Item> ;
--[ 2021.10.05.11.03.45.315.0 ]--
r 74             Node<Item> p;
--[ 2021.10.05.11.04.15.342.0 ]--
r 77                 return fals;
--[ 2021.10.05.11.04.15.487.0 ]--
r 77                 return fal;
--[ 2021.10.05.11.04.15.642.0 ]--
r 77                 return fa;
--[ 2021.10.05.11.04.15.787.0 ]--
r 77                 return f;
--[ 2021.10.05.11.04.15.914.0 ]--
r 77                 return ;
--[ 2021.10.05.11.04.16.989.0 ]--
r 77                 return p;
--[ 2021.10.05.11.04.21.764.0 ]--
r 77                 return p.;
--[ 2021.10.05.11.04.22.493.0 ]--
r 77                 return p.next;
--[ 2021.10.05.11.04.23.870.0 ]--
r 77                 return p.next ;
--[ 2021.10.05.11.04.25.319.0 ]--
r 77                 return p.next !;
--[ 2021.10.05.11.04.26.058.0 ]--
r 77                 return p.next !=;
--[ 2021.10.05.11.04.26.543.0 ]--
r 77                 return p.next != ;
--[ 2021.10.05.11.04.26.943.0 ]--
r 77                 return p.next != n;
--[ 2021.10.05.11.04.27.838.0 ]--
r 77                 return p.next != null;
--[ 2021.10.05.11.04.34.896.0 ]--
r 74             Node<Item> p ;
--[ 2021.10.05.11.04.34.983.0 ]--
r 74             Node<Item> p =;
--[ 2021.10.05.11.04.35.325.0 ]--
r 74             Node<Item> p =f;
--[ 2021.10.05.11.04.35.643.0 ]--
r 74             Node<Item> p =;
--[ 2021.10.05.11.04.35.810.0 ]--
r 74             Node<Item> p = ;
--[ 2021.10.05.11.04.35.953.0 ]--
r 74             Node<Item> p = f;
--[ 2021.10.05.11.04.36.541.0 ]--
r 74             Node<Item> p = first;
--[ 2021.10.05.11.04.59.151.0 ]--
+ 82                 
--[ 2021.10.05.11.05.12.143.0 ]--
r 85 
--[ 2021.10.05.11.06.22.593.0 ]--
r 82                 i
--[ 2021.10.05.11.06.22.656.0 ]--
r 82                 if
--[ 2021.10.05.11.06.23.775.0 ]--
r 82                 if 
--[ 2021.10.05.11.06.23.912.0 ]--
r 82                 if ()
--[ 2021.10.05.11.06.25.511.0 ]--
r 82                 if (h)
--[ 2021.10.05.11.06.25.897.0 ]--
r 82                 if ()
--[ 2021.10.05.11.06.26.559.0 ]--
r 82                 if (!)
--[ 2021.10.05.11.06.26.865.0 ]--
r 82                 if (!h)
--[ 2021.10.05.11.06.27.493.0 ]--
r 82                 if (!hasNext)
--[ 2021.10.05.11.06.27.498.0 ]--
r 82                 if (!hasNext())
--[ 2021.10.05.11.06.29.346.0 ]--
r 82                 if (!hasNext()) 
--[ 2021.10.05.11.06.29.680.0 ]--
r 82                 if (!hasNext()) {
--[ 2021.10.05.11.06.29.894.0 ]--
+ 83 
+ 84 }
--[ 2021.10.05.11.06.29.916.0 ]--
r 84                 }
--[ 2021.10.05.11.06.29.960.0 ]--
r 83                     
--[ 2021.10.05.11.06.42.520.0 ]--
r 84                 
--[ 2021.10.05.11.06.42.718.0 ]--
- 84
--[ 2021.10.05.11.06.42.878.0 ]--
- 83
--[ 2021.10.05.11.06.43.000.0 ]--
r 82                 if (!hasNext()) 
--[ 2021.10.05.11.06.43.139.0 ]--
r 82                 if (!hasNext())
--[ 2021.10.05.11.06.43.314.0 ]--
r 82                 if (!hasNext()
--[ 2021.10.05.11.06.43.806.0 ]--
r 82                 if (!hasNext(
--[ 2021.10.05.11.06.43.844.0 ]--
r 82                 if (!hasNext
--[ 2021.10.05.11.06.43.873.0 ]--
r 82                 if (!hasNex
--[ 2021.10.05.11.06.43.895.0 ]--
r 82                 if (!hasNe
--[ 2021.10.05.11.06.43.928.0 ]--
r 82                 if (!hasN
--[ 2021.10.05.11.06.43.954.0 ]--
r 82                 if (!has
--[ 2021.10.05.11.06.43.987.0 ]--
r 82                 if (!ha
--[ 2021.10.05.11.06.44.014.0 ]--
r 82                 if (!h
--[ 2021.10.05.11.06.44.045.0 ]--
r 82                 if (!
--[ 2021.10.05.11.06.44.191.0 ]--
r 82                 if (
--[ 2021.10.05.11.06.44.384.0 ]--
r 82                 if 
--[ 2021.10.05.11.06.44.585.0 ]--
r 82                 if
--[ 2021.10.05.11.06.44.696.0 ]--
r 82                 i
--[ 2021.10.05.11.06.44.856.0 ]--
r 82                 
--[ 2021.10.05.11.08.45.109.0 ]--
- 82
--[ 2021.10.05.11.08.47.157.0 ]--
r 82                 return nul;
--[ 2021.10.05.11.08.47.409.0 ]--
r 82                 return nu;
--[ 2021.10.05.11.08.47.534.0 ]--
r 82                 return n;
--[ 2021.10.05.11.08.47.680.0 ]--
r 82                 return ;
--[ 2021.10.05.11.08.48.960.0 ]--
r 82                 return p;
--[ 2021.10.05.11.08.49.225.0 ]--
r 82                 return p.;
--[ 2021.10.05.11.08.50.017.0 ]--
r 82                 return p.next;
--[ 2021.10.05.11.08.55.801.0 ]--
r 82                 return p.next.;
--[ 2021.10.05.11.08.57.005.0 ]--
r 82                 return p.next.i;
--[ 2021.10.05.11.08.57.493.0 ]--
r 82                 return p.next.item;
--[ 2021.10.05.11.09.57.026.0 ]--
r 84 d
--[ 2021.10.05.11.09.57.587.0 ]--
r 84 do
--[ 2021.10.05.11.09.57.641.0 ]--
r 84 don
--[ 2021.10.05.11.09.57.794.0 ]--
r 84 donu
--[ 2021.10.05.11.09.57.882.0 ]--
r 84 donus
--[ 2021.10.05.11.09.58.235.0 ]--
r 84 donu
--[ 2021.10.05.11.09.58.576.0 ]--
r 84 donus
--[ 2021.10.05.11.09.58.785.0 ]--
r 84 donuss
--[ 2021.10.05.11.09.59.128.0 ]--
r 84 donus
--[ 2021.10.05.11.09.59.261.0 ]--
r 84 donu
--[ 2021.10.05.11.09.59.835.0 ]--
r 84 donut
--[ 2021.10.05.11.09.59.915.0 ]--
r 84 donuts
--[ 2021.10.05.11.10.51.229.0 ]--
r 19     p int opcount = 0;
--[ 2021.10.05.11.10.51.279.0 ]--
r 19     pr int opcount = 0;
--[ 2021.10.05.11.10.51.680.0 ]--
r 19     pri int opcount = 0;
--[ 2021.10.05.11.10.51.704.0 ]--
r 19     priv int opcount = 0;
--[ 2021.10.05.11.10.52.166.0 ]--
r 19     private int opcount = 0;
--[ 2021.10.05.11.10.59.412.0 ]--
r 20     public int size = 0;
--[ 2021.10.05.11.11.01.328.0 ]--
r 20     p int size = 0;
--[ 2021.10.05.11.11.01.367.0 ]--
r 20     pr int size = 0;
--[ 2021.10.05.11.11.02.034.0 ]--
r 20     private int size = 0;
--[ 2021.10.05.11.11.35.649.0 ]--
r 53             Node<Item> tmp = new Node<>(item);?
--[ 2021.10.05.11.11.35.815.0 ]--
r 53             Node<Item> tmp = new Node<>(item);??
--[ 2021.10.05.11.11.35.986.0 ]--
r 53             Node<Item> tmp = new Node<>(item);???
--[ 2021.10.05.11.12.09.941.0 ]--
+ 38         
--[ 2021.10.05.11.12.10.936.0 ]--
r 38         o
--[ 2021.10.05.11.12.11.144.0 ]--
r 38         op
--[ 2021.10.05.11.12.11.531.0 ]--
r 38         opcount
--[ 2021.10.05.11.12.12.226.0 ]--
r 38         opcount+
--[ 2021.10.05.11.12.12.336.0 ]--
r 38         opcount++
--[ 2021.10.05.11.12.12.578.0 ]--
r 38         opcount++;
--[ 2021.10.05.11.12.15.414.0 ]--
+ 49     public void push(Item item) {\
r 50     
--[ 2021.10.05.11.12.15.448.0 ]--
r 50         
--[ 2021.10.05.11.12.15.987.0 ]--
r 50         o
--[ 2021.10.05.11.12.16.087.0 ]--
r 50         op
--[ 2021.10.05.11.12.16.530.0 ]--
r 50         opcount
--[ 2021.10.05.11.12.17.243.0 ]--
r 50         opcount+
--[ 2021.10.05.11.12.17.334.0 ]--
r 50         opcount++
--[ 2021.10.05.11.12.18.122.0 ]--
r 50         opcount++;
--[ 2021.10.05.11.12.20.628.0 ]--
+ 63         
--[ 2021.10.05.11.12.21.068.0 ]--
r 63         o
--[ 2021.10.05.11.12.21.127.0 ]--
r 63         op
--[ 2021.10.05.11.12.21.622.0 ]--
r 63         opcount
--[ 2021.10.05.11.12.22.588.0 ]--
r 63         opcount;
--[ 2021.10.05.11.12.24.095.0 ]--
r 63         opcount+;
--[ 2021.10.05.11.12.24.206.0 ]--
r 63         opcount++;
--[ 2021.10.05.11.12.30.251.0 ]--
+ 76         
--[ 2021.10.05.11.14.29.596.0 ]--
+ 81                 
--[ 2021.10.05.11.14.29.992.0 ]--
r 81                 i
--[ 2021.10.05.11.14.30.087.0 ]--
r 81                 if
--[ 2021.10.05.11.14.31.053.0 ]--
r 81                 if()
--[ 2021.10.05.11.14.34.479.0 ]--
r 81                 if() 
--[ 2021.10.05.11.14.35.008.0 ]--
r 81                 if() {
--[ 2021.10.05.11.14.35.207.0 ]--
+ 82 
+ 83 }
--[ 2021.10.05.11.14.35.229.0 ]--
r 83                 }
--[ 2021.10.05.11.14.35.271.0 ]--
r 82                     
--[ 2021.10.05.11.14.36.053.0 ]--
r 82                     ConcurrentModificationException
--[ 2021.10.05.11.14.38.078.0 ]--
r 82                     tConcurrentModificationException
--[ 2021.10.05.11.14.38.191.0 ]--
r 82                     thConcurrentModificationException
--[ 2021.10.05.11.14.38.308.0 ]--
r 82                     thrConcurrentModificationException
--[ 2021.10.05.11.14.38.384.0 ]--
r 82                     throConcurrentModificationException
--[ 2021.10.05.11.14.38.500.0 ]--
r 82                     thro ConcurrentModificationException
--[ 2021.10.05.11.14.38.980.0 ]--
r 82                     throConcurrentModificationException
--[ 2021.10.05.11.14.39.033.0 ]--
r 82                     throwConcurrentModificationException
--[ 2021.10.05.11.14.39.124.0 ]--
r 82                     throw ConcurrentModificationException
--[ 2021.10.05.11.14.39.264.0 ]--
r 82                     throw nConcurrentModificationException
--[ 2021.10.05.11.14.39.348.0 ]--
r 82                     throw neConcurrentModificationException
--[ 2021.10.05.11.14.39.540.0 ]--
r 82                     throw newConcurrentModificationException
--[ 2021.10.05.11.14.39.697.0 ]--
r 82                     throw new ConcurrentModificationException
--[ 2021.10.05.11.14.41.608.0 ]--
r 82                     throw new ConcurrentModificationException()
--[ 2021.10.05.11.14.43.064.0 ]--
r 82                     throw new ConcurrentModificationException();
--[ 2021.10.05.11.15.04.035.0 ]--
r 82                     throw new ConcurrentModificationException("");
--[ 2021.10.05.11.15.07.378.0 ]--
r 82                     throw new ConcurrentModificationException("m");
--[ 2021.10.05.11.15.07.502.0 ]--
r 82                     throw new ConcurrentModificationException("mo");
--[ 2021.10.05.11.15.07.598.0 ]--
r 82                     throw new ConcurrentModificationException("mod");
--[ 2021.10.05.11.15.07.702.0 ]--
r 82                     throw new ConcurrentModificationException("modi");
--[ 2021.10.05.11.15.07.933.0 ]--
r 82                     throw new ConcurrentModificationException("modif");
--[ 2021.10.05.11.15.08.054.0 ]--
r 82                     throw new ConcurrentModificationException("modifi");
--[ 2021.10.05.11.15.08.180.0 ]--
r 82                     throw new ConcurrentModificationException("modifie");
--[ 2021.10.05.11.15.08.361.0 ]--
r 82                     throw new ConcurrentModificationException("modified");
--[ 2021.10.05.11.15.08.449.0 ]--
r 82                     throw new ConcurrentModificationException("modified ");
--[ 2021.10.05.11.15.12.470.0 ]--
r 82                     throw new ConcurrentModificationException("modified s");
--[ 2021.10.05.11.15.12.680.0 ]--
r 82                     throw new ConcurrentModificationException("modified st");
--[ 2021.10.05.11.15.12.865.0 ]--
r 82                     throw new ConcurrentModificationException("modified ste");
--[ 2021.10.05.11.15.12.990.0 ]--
r 82                     throw new ConcurrentModificationException("modified steg");
--[ 2021.10.05.11.15.13.275.0 ]--
r 82                     throw new ConcurrentModificationException("modified stege");
--[ 2021.10.05.11.15.13.749.0 ]--
r 82                     throw new ConcurrentModificationException("modified steg");
--[ 2021.10.05.11.15.13.930.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegu");
--[ 2021.10.05.11.15.14.018.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue");
--[ 2021.10.05.11.15.14.090.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue ");
--[ 2021.10.05.11.15.14.307.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue w");
--[ 2021.10.05.11.15.14.530.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue wh");
--[ 2021.10.05.11.15.14.600.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue whi");
--[ 2021.10.05.11.15.14.641.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue whil");
--[ 2021.10.05.11.15.14.702.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue while");
--[ 2021.10.05.11.15.14.777.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue while ");
--[ 2021.10.05.11.15.14.984.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue while i");
--[ 2021.10.05.11.15.15.077.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue while it");
--[ 2021.10.05.11.15.15.306.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue while ite");
--[ 2021.10.05.11.15.15.537.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue while iter");
--[ 2021.10.05.11.15.15.933.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue while itera");
--[ 2021.10.05.11.15.16.254.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue while iterat");
--[ 2021.10.05.11.15.16.378.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue while iterati");
--[ 2021.10.05.11.15.16.460.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue while iteratin");
--[ 2021.10.05.11.15.16.488.0 ]--
r 82                     throw new ConcurrentModificationException("modified stegue while iterating");
--[ 2021.10.05.11.15.24.954.0 ]--
- 76
--[ 2021.10.05.11.15.26.259.0 ]--
+ 77             
--[ 2021.10.05.11.15.36.152.0 ]--
r 74     @Override?
--[ 2021.10.05.11.15.36.291.0 ]--
r 74     @Override??
--[ 2021.10.05.11.15.36.437.0 ]--
r 74     @Override???
--[ 2021.10.05.11.15.42.621.0 ]--
r 77             i
--[ 2021.10.05.11.15.42.707.0 ]--
r 77             in
--[ 2021.10.05.11.15.42.782.0 ]--
r 77             int
--[ 2021.10.05.11.15.42.898.0 ]--
r 77             int 
--[ 2021.10.05.11.15.43.038.0 ]--
r 77             int m
--[ 2021.10.05.11.15.43.232.0 ]--
r 77             int my
--[ 2021.10.05.11.15.43.351.0 ]--
r 77             int my 
--[ 2021.10.05.11.15.43.934.0 ]--
r 77             int my
--[ 2021.10.05.11.15.44.536.0 ]--
r 77             int m
--[ 2021.10.05.11.15.44.663.0 ]--
r 77             int 
--[ 2021.10.05.11.15.44.834.0 ]--
r 77             int c
--[ 2021.10.05.11.15.44.977.0 ]--
r 77             int cu
--[ 2021.10.05.11.15.45.066.0 ]--
r 77             int cur
--[ 2021.10.05.11.15.45.214.0 ]--
r 77             int curr
--[ 2021.10.05.11.15.46.078.0 ]--
r 77             int cur
--[ 2021.10.05.11.15.46.246.0 ]--
r 77             int cu
--[ 2021.10.05.11.15.46.443.0 ]--
r 77             int c
--[ 2021.10.05.11.15.46.617.0 ]--
r 77             int 
--[ 2021.10.05.11.15.47.098.0 ]--
r 77             int f
--[ 2021.10.05.11.15.47.855.0 ]--
r 77             int 
--[ 2021.10.05.11.15.48.623.0 ]--
r 77             int t
--[ 2021.10.05.11.15.48.753.0 ]--
r 77             int th
--[ 2021.10.05.11.15.48.802.0 ]--
r 77             int thi
--[ 2021.10.05.11.15.49.166.0 ]--
r 77             int this
--[ 2021.10.05.11.15.50.503.0 ]--
r 77             int thisO
--[ 2021.10.05.11.15.51.993.0 ]--
r 77             int thisOp
--[ 2021.10.05.11.15.52.478.0 ]--
r 77             int thisOpC
--[ 2021.10.05.11.15.52.662.0 ]--
r 77             int thisOpCo
--[ 2021.10.05.11.15.52.753.0 ]--
r 77             int thisOpCou
--[ 2021.10.05.11.15.52.952.0 ]--
r 77             int thisOpCoutn
--[ 2021.10.05.11.15.53.709.0 ]--
r 77             int thisOpCout
--[ 2021.10.05.11.15.53.834.0 ]--
r 77             int thisOpCou
--[ 2021.10.05.11.15.53.993.0 ]--
r 77             int thisOpCoun
--[ 2021.10.05.11.15.54.075.0 ]--
r 77             int thisOpCount
--[ 2021.10.05.11.15.57.359.0 ]--
r 77             int fOpCount
--[ 2021.10.05.11.15.57.514.0 ]--
r 77             int frOpCount
--[ 2021.10.05.11.15.57.593.0 ]--
r 77             int froOpCount
--[ 2021.10.05.11.15.58.047.0 ]--
r 77             int frozOpCount
--[ 2021.10.05.11.15.58.302.0 ]--
r 77             int frozreOpCount
--[ 2021.10.05.11.15.58.372.0 ]--
r 77             int frozrenOpCount
--[ 2021.10.05.11.15.58.929.0 ]--
r 77             int frozreOpCount
--[ 2021.10.05.11.15.59.054.0 ]--
r 77             int frozrOpCount
--[ 2021.10.05.11.15.59.313.0 ]--
r 77             int frozOpCount
--[ 2021.10.05.11.15.59.432.0 ]--
r 77             int frozeOpCount
--[ 2021.10.05.11.15.59.570.0 ]--
r 77             int frozenOpCount
--[ 2021.10.05.11.16.02.023.0 ]--
r 77             int frozenOpCount 
--[ 2021.10.05.11.16.02.111.0 ]--
r 77             int frozenOpCount =
--[ 2021.10.05.11.16.02.226.0 ]--
r 77             int frozenOpCount = 
--[ 2021.10.05.11.16.02.648.0 ]--
r 77             int frozenOpCount = m
--[ 2021.10.05.11.16.03.216.0 ]--
r 77             int frozenOpCount = 
--[ 2021.10.05.11.16.03.688.0 ]--
r 77             int frozenOpCount = o
--[ 2021.10.05.11.16.03.781.0 ]--
r 77             int frozenOpCount = op
--[ 2021.10.05.11.16.04.196.0 ]--
r 77             int frozenOpCount = opcount
--[ 2021.10.05.11.16.04.901.0 ]--
r 77             int frozenOpCount = opcount;
--[ 2021.10.05.11.16.06.903.0 ]--
r 81                 if () {
--[ 2021.10.05.11.16.07.868.0 ]--
r 81                 if (f) {
--[ 2021.10.05.11.16.08.840.0 ]--
r 81                 if (fr) {
--[ 2021.10.05.11.16.09.265.0 ]--
r 81                 if (frozenOpCount) {
--[ 2021.10.05.11.16.09.678.0 ]--
r 81                 if (frozenOpCount ) {
--[ 2021.10.05.11.16.10.398.0 ]--
r 81                 if (frozenOpCount !) {
--[ 2021.10.05.11.16.10.690.0 ]--
r 81                 if (frozenOpCount !=) {
--[ 2021.10.05.11.16.10.867.0 ]--
r 81                 if (frozenOpCount != ) {
--[ 2021.10.05.11.16.11.870.0 ]--
r 81                 if (frozenOpCount != o) {
--[ 2021.10.05.11.16.12.325.0 ]--
r 81                 if (frozenOpCount != opcount) {
--[ 2021.10.05.11.16.19.928.0 ]--
+ 89                 
--[ 2021.10.05.11.16.20.648.0 ]--
+ 89                 if (frozenOpCount != opcount) {
+ 90                     throw new ConcurrentModificationException("modified stegue while iterating");
r 91                 }
--[ 2021.10.05.11.16.38.783.0 ]--
r 49     public void push(Item item) {
--[ 2021.10.05.11.24.30.008.0 ]--
r 94 
--[ 2021.10.05.11.24.35.023.0 ]--
r 74     @Override??
--[ 2021.10.05.11.24.35.214.0 ]--
r 74     @Override?
--[ 2021.10.05.11.24.36.006.0 ]--
r 74     @Override
--[ 2021.10.05.11.25.15.524.0 ]--
+ 79             
--[ 2021.10.05.11.25.18.756.0 ]--
+ 96             
--[ 2021.10.05.11.25.56.647.0 ]--
r 55             Node<Item> tmp = new Node<>(item);??
--[ 2021.10.05.11.25.56.816.0 ]--
r 55             Node<Item> tmp = new Node<>(item);?
--[ 2021.10.05.11.25.57.038.0 ]--
r 55             Node<Item> tmp = new Node<>(item);
--[ 2021.10.05.11.27.33.882.0 ]--
r 96             @
--[ 2021.10.05.11.27.34.715.0 ]--
r 96             @Override
--[ 2021.10.05.11.27.42.175.0 ]--
+ 69             
--[ 2021.10.05.11.27.43.038.0 ]--
r 69             s
--[ 2021.10.05.11.27.43.880.0 ]--
r 69             size
--[ 2021.10.05.11.27.44.650.0 ]--
r 69             size+
--[ 2021.10.05.11.27.44.755.0 ]--
r 69             size++
--[ 2021.10.05.11.27.45.082.0 ]--
r 69             size++;
--[ 2021.10.05.11.27.49.243.0 ]--
+ 58             
--[ 2021.10.05.11.27.50.190.0 ]--
r 58             s
--[ 2021.10.05.11.27.50.731.0 ]--
r 58             size
--[ 2021.10.05.11.27.51.353.0 ]--
r 58             size+
--[ 2021.10.05.11.27.51.469.0 ]--
r 58             size++
--[ 2021.10.05.11.27.51.686.0 ]--
r 58             size++;
--[ 2021.10.05.11.27.59.858.0 ]--
r 58             
--[ 2021.10.05.11.28.00.127.0 ]--
- 58
--[ 2021.10.05.11.28.00.241.0 ]--
r 57             first = tmp
--[ 2021.10.05.11.28.01.638.0 ]--
r 57             first = tmp;
--[ 2021.10.05.11.28.02.651.0 ]--
+ 59         
--[ 2021.10.05.11.28.03.405.0 ]--
r 59         size++;
--[ 2021.10.05.11.29.08.220.0 ]--
+ 46         
--[ 2021.10.05.11.29.08.993.0 ]--
r 46         s
--[ 2021.10.05.11.29.09.659.0 ]--
r 46         size
--[ 2021.10.05.11.29.10.766.0 ]--
r 46         size+
--[ 2021.10.05.11.29.10.893.0 ]--
r 46         size++
--[ 2021.10.05.11.29.11.400.0 ]--
r 46         size++;
--[ 2021.10.05.11.29.22.608.0 ]--
r 82 
--[ 2021.10.05.11.35.06.799.0 ]--
r 106     
--[ 2021.10.05.11.35.07.103.0 ]--
r 106         
--[ 2021.10.05.11.35.10.623.0 ]--
r 106         p
--[ 2021.10.05.11.35.10.758.0 ]--
r 106         pr
--[ 2021.10.05.11.35.12.470.0 ]--
r 106         p
--[ 2021.10.05.11.35.12.587.0 ]--
r 106         
--[ 2021.10.05.11.35.14.325.0 ]--
r 106         S
--[ 2021.10.05.11.35.14.716.0 ]--
r 106         St
--[ 2021.10.05.11.35.14.927.0 ]--
r 106         Std
--[ 2021.10.05.11.35.15.792.0 ]--
r 106         StdOut
--[ 2021.10.05.11.35.16.270.0 ]--
r 106         StdOut.
--[ 2021.10.05.11.35.17.331.0 ]--
r 106         StdOut.println
--[ 2021.10.05.11.35.17.337.0 ]--
r 106         StdOut.println()
--[ 2021.10.05.11.35.17.341.0 ]--
r 106         StdOut.println();
--[ 2021.10.05.11.35.26.658.0 ]--
r 106         StdOut.println("");
--[ 2021.10.05.11.35.27.661.0 ]--
r 106         StdOut.println("m");
--[ 2021.10.05.11.35.27.787.0 ]--
r 106         StdOut.println("ma");
--[ 2021.10.05.11.35.27.838.0 ]--
r 106         StdOut.println("mai");
--[ 2021.10.05.11.35.27.901.0 ]--
r 106         StdOut.println("main");
--[ 2021.10.05.11.35.34.580.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.37.37.038.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.37.49.889.0 ]--
+ 106         
--[ 2021.10.05.11.38.13.234.0 ]--
- 2
--[ 2021.10.05.11.39.31.109.0 ]--
r 105         S
--[ 2021.10.05.11.39.32.429.0 ]--
r 105         St
--[ 2021.10.05.11.39.33.491.0 ]--
r 105         Ste
--[ 2021.10.05.11.39.34.421.0 ]--
r 105         Steque
--[ 2021.10.05.11.39.35.685.0 ]--
r 105         Steque<>
--[ 2021.10.05.11.39.49.102.0 ]--
r 105         Steque<S>
--[ 2021.10.05.11.39.50.151.0 ]--
r 105         Steque<St>
--[ 2021.10.05.11.39.50.968.0 ]--
r 105         Steque<Str>
--[ 2021.10.05.11.39.51.766.0 ]--
r 105         Steque<String>
--[ 2021.10.05.11.39.53.044.0 ]--
r 105         Steque<String> 
--[ 2021.10.05.11.39.54.974.0 ]--
r 105         Steque<String> t
--[ 2021.10.05.11.39.55.314.0 ]--
r 105         Steque<String> tew
--[ 2021.10.05.11.39.55.823.0 ]--
r 105         Steque<String> te
--[ 2021.10.05.11.39.55.917.0 ]--
r 105         Steque<String> tew
--[ 2021.10.05.11.39.56.244.0 ]--
r 105         Steque<String> tews
--[ 2021.10.05.11.39.56.394.0 ]--
r 105         Steque<String> tew
--[ 2021.10.05.11.39.56.501.0 ]--
r 105         Steque<String> te
--[ 2021.10.05.11.39.56.548.0 ]--
r 105         Steque<String> tes
--[ 2021.10.05.11.39.56.839.0 ]--
r 105         Steque<String> test
--[ 2021.10.05.11.39.57.205.0 ]--
r 105         Steque<String> testS
--[ 2021.10.05.11.39.57.493.0 ]--
r 105         Steque<String> testSt
--[ 2021.10.05.11.39.57.670.0 ]--
r 105         Steque<String> testStr
--[ 2021.10.05.11.39.57.761.0 ]--
r 105         Steque<String> testStri
--[ 2021.10.05.11.39.57.837.0 ]--
r 105         Steque<String> testStrin
--[ 2021.10.05.11.39.58.253.0 ]--
r 105         Steque<String> testString
--[ 2021.10.05.11.39.58.496.0 ]--
r 105         Steque<String> testString 
--[ 2021.10.05.11.39.59.166.0 ]--
r 105         Steque<String> testString =
--[ 2021.10.05.11.39.59.345.0 ]--
r 105         Steque<String> testString = 
--[ 2021.10.05.11.40.02.000.0 ]--
r 105         Steque<String> testString = n
--[ 2021.10.05.11.40.02.148.0 ]--
r 105         Steque<String> testString = ne
--[ 2021.10.05.11.40.02.633.0 ]--
r 105         Steque<String> testString = new
--[ 2021.10.05.11.40.02.640.0 ]--
r 105         Steque<String> testString = new 
--[ 2021.10.05.11.40.03.911.0 ]--
r 105         Steque<String> testString = new S
--[ 2021.10.05.11.40.04.848.0 ]--
r 105         Steque<String> testString = new Steque
--[ 2021.10.05.11.40.04.884.0 ]--
r 105         Steque<String> testString = new Steque<>
--[ 2021.10.05.11.40.04.891.0 ]--
r 105         Steque<String> testString = new Steque<>()
--[ 2021.10.05.11.40.06.383.0 ]--
r 105         Steque<String> testString = new Steque<>();
--[ 2021.10.05.11.40.10.814.0 ]--
+ 106         
--[ 2021.10.05.11.40.12.604.0 ]--
r 106         s
--[ 2021.10.05.11.40.12.881.0 ]--
r 106         
--[ 2021.10.05.11.40.13.120.0 ]--
r 106         t
--[ 2021.10.05.11.40.13.656.0 ]--
r 106         testString
--[ 2021.10.05.11.40.25.709.0 ]--
r 106         testString.
--[ 2021.10.05.11.40.25.857.0 ]--
r 106         testString. 
--[ 2021.10.05.11.40.26.375.0 ]--
r 106         testString.
--[ 2021.10.05.11.40.26.780.0 ]--
r 106         testString.s
--[ 2021.10.05.11.40.28.691.0 ]--
r 106         testString.size
--[ 2021.10.05.11.40.28.697.0 ]--
r 106         testString.size()
--[ 2021.10.05.11.40.32.108.0 ]--
r 106         StestString.size()
--[ 2021.10.05.11.40.34.412.0 ]--
r 106         StdOuttestString.size()
--[ 2021.10.05.11.40.34.422.0 ]--
r 106         StdOut testString.size()
--[ 2021.10.05.11.40.34.431.0 ]--
r 106         StdOuttestString.size()
--[ 2021.10.05.11.40.35.506.0 ]--
r 106         StdOut.testString.size()
--[ 2021.10.05.11.40.35.758.0 ]--
r 106         StdOut.ptestString.size()
--[ 2021.10.05.11.40.36.345.0 ]--
r 106         StdOut.printlntestString.size()
--[ 2021.10.05.11.40.36.358.0 ]--
r 106         StdOut.println()testString.size()
--[ 2021.10.05.11.40.36.363.0 ]--
r 106         StdOut.println();testString.size()
--[ 2021.10.05.11.40.40.283.0 ]--
r 106         StdOut.println();
--[ 2021.10.05.11.40.41.644.0 ]--
r 106         StdOut.println(testString.size());
--[ 2021.10.05.11.40.47.607.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.41.21.627.0 ]--
- 107
--[ 2021.10.05.11.41.27.306.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.41.55.443.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.42.10.241.0 ]--
+ 106         
--[ 2021.10.05.11.42.11.438.0 ]--
r 106         i
--[ 2021.10.05.11.42.11.545.0 ]--
r 106         int
--[ 2021.10.05.11.42.11.990.0 ]--
r 106         int 
--[ 2021.10.05.11.42.12.144.0 ]--
r 106         int s
--[ 2021.10.05.11.42.12.255.0 ]--
r 106         int si
--[ 2021.10.05.11.42.12.902.0 ]--
r 106         int siz
--[ 2021.10.05.11.42.13.205.0 ]--
r 106         int size
--[ 2021.10.05.11.42.13.398.0 ]--
r 106         int size 
--[ 2021.10.05.11.42.14.117.0 ]--
r 106         int size =
--[ 2021.10.05.11.42.14.292.0 ]--
r 106         int size = 
--[ 2021.10.05.11.42.14.760.0 ]--
r 106         int size = t
--[ 2021.10.05.11.42.14.958.0 ]--
r 106         int size = te
--[ 2021.10.05.11.42.15.379.0 ]--
r 106         int size = testString
--[ 2021.10.05.11.42.15.734.0 ]--
r 106         int size = testString.
--[ 2021.10.05.11.42.16.164.0 ]--
r 106         int size = testString.s
--[ 2021.10.05.11.42.16.495.0 ]--
r 106         int size = testString.size
--[ 2021.10.05.11.42.17.333.0 ]--
r 106         int size = testString.size()
--[ 2021.10.05.11.42.19.414.0 ]--
r 106         int size = testString.size();
--[ 2021.10.05.11.42.22.711.0 ]--
r 107 //        StdOut.println(testString.size());
--[ 2021.10.05.11.42.35.049.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.42.57.755.0 ]--
- 107
--[ 2021.10.05.11.43.00.452.0 ]--
+ 107         
--[ 2021.10.05.11.43.05.271.0 ]--
r 107         i
--[ 2021.10.05.11.43.05.384.0 ]--
r 107         in
--[ 2021.10.05.11.43.05.423.0 ]--
r 107         int
--[ 2021.10.05.11.43.05.863.0 ]--
r 107         int 
--[ 2021.10.05.11.43.06.167.0 ]--
r 107         int i
--[ 2021.10.05.11.43.06.221.0 ]--
r 107         int is
--[ 2021.10.05.11.43.07.021.0 ]--
r 107         int isE
--[ 2021.10.05.11.43.07.552.0 ]--
r 107         int isEm
--[ 2021.10.05.11.43.07.709.0 ]--
r 107         int isEmp
--[ 2021.10.05.11.43.07.992.0 ]--
r 107         int isEmpy
--[ 2021.10.05.11.43.08.076.0 ]--
r 107         int isEmpyt
--[ 2021.10.05.11.43.08.663.0 ]--
r 107         int isEmpy
--[ 2021.10.05.11.43.08.791.0 ]--
r 107         int isEmp
--[ 2021.10.05.11.43.09.245.0 ]--
r 107         int isEmpt
--[ 2021.10.05.11.43.09.317.0 ]--
r 107         int isEmpty
--[ 2021.10.05.11.43.10.108.0 ]--
r 107         int isEmpty()
--[ 2021.10.05.11.43.13.572.0 ]--
r 107         intisEmpty()
--[ 2021.10.05.11.43.13.692.0 ]--
r 107         inisEmpty()
--[ 2021.10.05.11.43.13.838.0 ]--
r 107         iisEmpty()
--[ 2021.10.05.11.43.13.981.0 ]--
r 107         isEmpty()
--[ 2021.10.05.11.43.14.756.0 ]--
r 107         tisEmpty()
--[ 2021.10.05.11.43.14.966.0 ]--
r 107         teisEmpty()
--[ 2021.10.05.11.43.15.417.0 ]--
r 107         testStringisEmpty()
--[ 2021.10.05.11.43.15.753.0 ]--
r 107         testString.isEmpty()
--[ 2021.10.05.11.43.18.477.0 ]--
r 107         testString.isEmpty();
--[ 2021.10.05.11.43.31.280.0 ]--
r 107         atestString.isEmpty();
--[ 2021.10.05.11.43.33.186.0 ]--
r 107         asserttestString.isEmpty();
--[ 2021.10.05.11.43.33.196.0 ]--
r 107         assert testString.isEmpty();
--[ 2021.10.05.11.43.34.355.0 ]--
r 107         assert (testString.isEmpty();
--[ 2021.10.05.11.43.37.460.0 ]--
r 107         assert (testString.isEmpty());
--[ 2021.10.05.11.43.40.525.0 ]--
r 107         assert(testString.isEmpty());
--[ 2021.10.05.11.44.02.676.0 ]--
r 107         assert (testString.isEmpty());
--[ 2021.10.05.11.44.03.109.0 ]--
r 107         assert testString.isEmpty());
--[ 2021.10.05.11.44.04.671.0 ]--
r 107         assert testString.isEmpty();
--[ 2021.10.05.11.45.02.534.0 ]--
r 107         assert testString.isEmpty() ;
--[ 2021.10.05.11.45.03.139.0 ]--
r 107         assert testString.isEmpty() :;
--[ 2021.10.05.11.45.03.443.0 ]--
r 107         assert testString.isEmpty() : ;
--[ 2021.10.05.11.46.31.875.0 ]--
r 107         assert testString.isEmpty() : t;
--[ 2021.10.05.11.46.32.066.0 ]--
r 107         assert testString.isEmpty() : tr;
--[ 2021.10.05.11.46.32.697.0 ]--
r 107         assert testString.isEmpty() : true;
--[ 2021.10.05.11.46.47.563.0 ]--
r 106         assert testString.isEmpty() : true;
--[ 2021.10.05.11.46.52.109.0 ]--
r 106         assert testString.isEmpt() : true;
--[ 2021.10.05.11.46.52.263.0 ]--
r 106         assert testString.isEmp() : true;
--[ 2021.10.05.11.46.52.398.0 ]--
r 106         assert testString.isEm() : true;
--[ 2021.10.05.11.46.52.533.0 ]--
r 106         assert testString.isE() : true;
--[ 2021.10.05.11.46.52.670.0 ]--
r 106         assert testString.is() : true;
--[ 2021.10.05.11.46.52.806.0 ]--
r 106         assert testString.i() : true;
--[ 2021.10.05.11.46.52.930.0 ]--
r 106         assert testString.() : true;
--[ 2021.10.05.11.46.53.428.0 ]--
r 106         assert testString.s() : true;
--[ 2021.10.05.11.46.53.559.0 ]--
r 106         assert testString.si() : true;
--[ 2021.10.05.11.46.53.933.0 ]--
r 106         assert testString.size() : true;
--[ 2021.10.05.11.46.58.124.0 ]--
r 106         assert testString.size() : 0;
--[ 2021.10.05.11.47.08.196.0 ]--
r 106         assert testString.size() : ;
--[ 2021.10.05.11.47.08.571.0 ]--
r 106         assert testString.size() : t;
--[ 2021.10.05.11.47.09.041.0 ]--
r 106         assert testString.size() : testString;
--[ 2021.10.05.11.47.09.596.0 ]--
r 106         assert testString.size() : testStrin;
--[ 2021.10.05.11.47.10.108.0 ]--
r 106         assert testString.size() : testStri;
--[ 2021.10.05.11.47.10.137.0 ]--
r 106         assert testString.size() : testStr;
--[ 2021.10.05.11.47.10.167.0 ]--
r 106         assert testString.size() : testSt;
--[ 2021.10.05.11.47.10.199.0 ]--
r 106         assert testString.size() : testS;
--[ 2021.10.05.11.47.10.240.0 ]--
r 106         assert testString.size() : test;
--[ 2021.10.05.11.47.10.253.0 ]--
r 106         assert testString.size() : tes;
--[ 2021.10.05.11.47.10.404.0 ]--
r 106         assert testString.size() : te;
--[ 2021.10.05.11.47.10.768.0 ]--
r 106         assert testString.size() : t;
--[ 2021.10.05.11.47.10.837.0 ]--
r 106         assert testString.size() : tr;
--[ 2021.10.05.11.47.10.970.0 ]--
r 106         assert testString.size() : tre;
--[ 2021.10.05.11.47.11.876.0 ]--
r 106         assert testString.size() : true;
--[ 2021.10.05.11.47.13.995.0 ]--
r 106         assert testString.size()= : true;
--[ 2021.10.05.11.47.14.127.0 ]--
r 106         assert testString.size()== : true;
--[ 2021.10.05.11.47.14.571.0 ]--
r 106         assert testString.size()==0 : true;
--[ 2021.10.05.11.48.01.015.0 ]--
r 106         assert testString.size()==0 : ;
--[ 2021.10.05.11.48.01.174.0 ]--
r 106         assert testString.size()==0 :;
--[ 2021.10.05.11.48.01.334.0 ]--
r 106         assert testString.size()==0 ;
--[ 2021.10.05.11.48.01.486.0 ]--
r 106         assert testString.size()==0;
--[ 2021.10.05.11.48.02.331.0 ]--
r 107         assert testString.isEmpty() : ;
--[ 2021.10.05.11.48.02.494.0 ]--
r 107         assert testString.isEmpty() :;
--[ 2021.10.05.11.48.02.636.0 ]--
r 107         assert testString.isEmpty() ;
--[ 2021.10.05.11.48.03.432.0 ]--
r 107         assert testString.isEmpty();
--[ 2021.10.05.11.48.06.691.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.48.09.552.0 ]--
r 106         assert testString.size()==;
--[ 2021.10.05.11.48.09.731.0 ]--
r 106         assert testString.size()==1;
--[ 2021.10.05.11.48.12.842.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.48.14.564.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.48.17.547.0 ]--
r 106         assert testString.size()==;
--[ 2021.10.05.11.48.17.734.0 ]--
r 106         assert testString.size()=;
--[ 2021.10.05.11.48.18.060.0 ]--
r 106         assert testString.size();
--[ 2021.10.05.11.48.20.883.0 ]--
r 106         assert testString.size()=;
--[ 2021.10.05.11.48.21.007.0 ]--
r 106         assert testString.size()==;
--[ 2021.10.05.11.48.21.231.0 ]--
r 106         assert testString.size()==0;
--[ 2021.10.05.11.48.25.926.0 ]--
r 107         assert !testString.isEmpty();
--[ 2021.10.05.11.48.29.151.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.48.31.175.0 ]--
r 107         assert testString.isEmpty();
--[ 2021.10.05.11.51.24.468.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.51.26.137.0 ]--
r 107         assert !testString.isEmpty();
--[ 2021.10.05.11.51.29.628.0 ]--
CompilationStatus (AEW): 0 0 0
--[ 2021.10.05.11.52.09.087.0 ]--
r 107         assert testString.isEmpty();
--[ 2021.10.05.11.52.12.755.0 ]--
CompilationStatus (AEW): 0 0 0
